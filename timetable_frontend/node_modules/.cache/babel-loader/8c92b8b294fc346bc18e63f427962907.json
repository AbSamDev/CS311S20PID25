{"ast":null,"code":"\"use strict\";\n\nexports.unquoteString = function (quotedUrl) {\n  var doubleQuoteRegex = /^\"(.*)\"$/,\n      singleQuoteRegex = /^'(.*)'$/;\n\n  if (doubleQuoteRegex.test(quotedUrl)) {\n    return quotedUrl.replace(doubleQuoteRegex, \"$1\");\n  } else {\n    if (singleQuoteRegex.test(quotedUrl)) {\n      return quotedUrl.replace(singleQuoteRegex, \"$1\");\n    } else {\n      return quotedUrl;\n    }\n  }\n};\n\nexports.rulesForCssText = function (styleContent) {\n  var doc = document.implementation.createHTMLDocument(\"\"),\n      styleElement = document.createElement(\"style\"),\n      rules;\n  styleElement.textContent = styleContent; // the style will only be parsed once it is added to a document\n\n  doc.body.appendChild(styleElement);\n  rules = styleElement.sheet.cssRules;\n  return Array.prototype.slice.call(rules);\n};\n\nexports.cssRulesToText = function (cssRules) {\n  return cssRules.reduce(function (cssText, rule) {\n    return cssText + rule.cssText;\n  }, '');\n};\n\nexports.exchangeRule = function (cssRules, rule, newRuleText) {\n  var ruleIdx = cssRules.indexOf(rule); // We create a new document and stylesheet to parse the rule,\n  // instead of relying on rule.parentStyleSheet, because\n  // rule.parentStyleSheet may be null\n  // (https://github.com/cburgmer/inlineresources/issues/3)\n\n  cssRules[ruleIdx] = exports.rulesForCssText(newRuleText)[0];\n}; // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=443978\n\n\nexports.changeFontFaceRuleSrc = function (cssRules, rule, newSrc) {\n  var newRuleText = '@font-face { font-family: ' + rule.style.getPropertyValue(\"font-family\") + '; ';\n\n  if (rule.style.getPropertyValue(\"font-style\")) {\n    newRuleText += 'font-style: ' + rule.style.getPropertyValue(\"font-style\") + '; ';\n  }\n\n  if (rule.style.getPropertyValue(\"font-weight\")) {\n    newRuleText += 'font-weight: ' + rule.style.getPropertyValue(\"font-weight\") + '; ';\n  }\n\n  newRuleText += 'src: ' + newSrc + '}';\n  exports.exchangeRule(cssRules, rule, newRuleText);\n};","map":{"version":3,"sources":["D:/act-back original/timetable_frontend/node_modules/inlineresources/src/cssSupport.js"],"names":["exports","unquoteString","quotedUrl","doubleQuoteRegex","singleQuoteRegex","test","replace","rulesForCssText","styleContent","doc","document","implementation","createHTMLDocument","styleElement","createElement","rules","textContent","body","appendChild","sheet","cssRules","Array","prototype","slice","call","cssRulesToText","reduce","cssText","rule","exchangeRule","newRuleText","ruleIdx","indexOf","changeFontFaceRuleSrc","newSrc","style","getPropertyValue"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,aAAR,GAAwB,UAAUC,SAAV,EAAqB;AACzC,MAAIC,gBAAgB,GAAG,UAAvB;AAAA,MACIC,gBAAgB,GAAG,UADvB;;AAGA,MAAID,gBAAgB,CAACE,IAAjB,CAAsBH,SAAtB,CAAJ,EAAsC;AAClC,WAAOA,SAAS,CAACI,OAAV,CAAkBH,gBAAlB,EAAoC,IAApC,CAAP;AACH,GAFD,MAEO;AACH,QAAIC,gBAAgB,CAACC,IAAjB,CAAsBH,SAAtB,CAAJ,EAAsC;AAClC,aAAOA,SAAS,CAACI,OAAV,CAAkBF,gBAAlB,EAAoC,IAApC,CAAP;AACH,KAFD,MAEO;AACH,aAAOF,SAAP;AACH;AACJ;AACJ,CAbD;;AAeAF,OAAO,CAACO,eAAR,GAA0B,UAAUC,YAAV,EAAwB;AAC9C,MAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBC,kBAAxB,CAA2C,EAA3C,CAAV;AAAA,MACIC,YAAY,GAAGH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CADnB;AAAA,MAEIC,KAFJ;AAIAF,EAAAA,YAAY,CAACG,WAAb,GAA2BR,YAA3B,CAL8C,CAM9C;;AACAC,EAAAA,GAAG,CAACQ,IAAJ,CAASC,WAAT,CAAqBL,YAArB;AACAE,EAAAA,KAAK,GAAGF,YAAY,CAACM,KAAb,CAAmBC,QAA3B;AAEA,SAAOC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,KAA3B,CAAP;AACH,CAXD;;AAaAf,OAAO,CAACyB,cAAR,GAAyB,UAAUL,QAAV,EAAoB;AACzC,SAAOA,QAAQ,CAACM,MAAT,CAAgB,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC5C,WAAOD,OAAO,GAAGC,IAAI,CAACD,OAAtB;AACH,GAFM,EAEJ,EAFI,CAAP;AAGH,CAJD;;AAMA3B,OAAO,CAAC6B,YAAR,GAAuB,UAAUT,QAAV,EAAoBQ,IAApB,EAA0BE,WAA1B,EAAuC;AAC1D,MAAIC,OAAO,GAAGX,QAAQ,CAACY,OAAT,CAAiBJ,IAAjB,CAAd,CAD0D,CAG1D;AACA;AACA;AACA;;AACAR,EAAAA,QAAQ,CAACW,OAAD,CAAR,GAAoB/B,OAAO,CAACO,eAAR,CAAwBuB,WAAxB,EAAqC,CAArC,CAApB;AACH,CARD,C,CAUA;;;AACA9B,OAAO,CAACiC,qBAAR,GAAgC,UAAUb,QAAV,EAAoBQ,IAApB,EAA0BM,MAA1B,EAAkC;AAC9D,MAAIJ,WAAW,GAAG,+BAA+BF,IAAI,CAACO,KAAL,CAAWC,gBAAX,CAA4B,aAA5B,CAA/B,GAA4E,IAA9F;;AAEA,MAAIR,IAAI,CAACO,KAAL,CAAWC,gBAAX,CAA4B,YAA5B,CAAJ,EAA+C;AAC3CN,IAAAA,WAAW,IAAI,iBAAiBF,IAAI,CAACO,KAAL,CAAWC,gBAAX,CAA4B,YAA5B,CAAjB,GAA6D,IAA5E;AACH;;AAED,MAAIR,IAAI,CAACO,KAAL,CAAWC,gBAAX,CAA4B,aAA5B,CAAJ,EAAgD;AAC5CN,IAAAA,WAAW,IAAI,kBAAkBF,IAAI,CAACO,KAAL,CAAWC,gBAAX,CAA4B,aAA5B,CAAlB,GAA+D,IAA9E;AACH;;AAEDN,EAAAA,WAAW,IAAI,UAAUI,MAAV,GAAmB,GAAlC;AACAlC,EAAAA,OAAO,CAAC6B,YAAR,CAAqBT,QAArB,EAA+BQ,IAA/B,EAAqCE,WAArC;AACH,CAbD","sourcesContent":["\"use strict\";\n\nexports.unquoteString = function (quotedUrl) {\n    var doubleQuoteRegex = /^\"(.*)\"$/,\n        singleQuoteRegex = /^'(.*)'$/;\n\n    if (doubleQuoteRegex.test(quotedUrl)) {\n        return quotedUrl.replace(doubleQuoteRegex, \"$1\");\n    } else {\n        if (singleQuoteRegex.test(quotedUrl)) {\n            return quotedUrl.replace(singleQuoteRegex, \"$1\");\n        } else {\n            return quotedUrl;\n        }\n    }\n};\n\nexports.rulesForCssText = function (styleContent) {\n    var doc = document.implementation.createHTMLDocument(\"\"),\n        styleElement = document.createElement(\"style\"),\n        rules;\n\n    styleElement.textContent = styleContent;\n    // the style will only be parsed once it is added to a document\n    doc.body.appendChild(styleElement);\n    rules = styleElement.sheet.cssRules;\n\n    return Array.prototype.slice.call(rules);\n};\n\nexports.cssRulesToText = function (cssRules) {\n    return cssRules.reduce(function (cssText, rule) {\n        return cssText + rule.cssText;\n    }, '');\n};\n\nexports.exchangeRule = function (cssRules, rule, newRuleText) {\n    var ruleIdx = cssRules.indexOf(rule);\n\n    // We create a new document and stylesheet to parse the rule,\n    // instead of relying on rule.parentStyleSheet, because\n    // rule.parentStyleSheet may be null\n    // (https://github.com/cburgmer/inlineresources/issues/3)\n    cssRules[ruleIdx] = exports.rulesForCssText(newRuleText)[0];\n};\n\n// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=443978\nexports.changeFontFaceRuleSrc = function (cssRules, rule, newSrc) {\n    var newRuleText = '@font-face { font-family: ' + rule.style.getPropertyValue(\"font-family\") + '; ';\n\n    if (rule.style.getPropertyValue(\"font-style\")) {\n        newRuleText += 'font-style: ' + rule.style.getPropertyValue(\"font-style\") + '; ';\n    }\n\n    if (rule.style.getPropertyValue(\"font-weight\")) {\n        newRuleText += 'font-weight: ' + rule.style.getPropertyValue(\"font-weight\") + '; ';\n    }\n\n    newRuleText += 'src: ' + newSrc + '}';\n    exports.exchangeRule(cssRules, rule, newRuleText);\n};\n"]},"metadata":{},"sourceType":"script"}