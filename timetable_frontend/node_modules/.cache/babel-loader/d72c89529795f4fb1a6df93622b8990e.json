{"ast":null,"code":"import _toConsumableArray from\"D:\\\\timetableCLone\\\\CS311S20PID25\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\timetableCLone\\\\CS311S20PID25\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\timetableCLone\\\\CS311S20PID25\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\timetableCLone\\\\CS311S20PID25\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\timetableCLone\\\\CS311S20PID25\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import Grid from'@material-ui/core/Grid';import SendIcon from'@material-ui/icons/Send';import Select from'@material-ui/core/Select';import MenuItem from'@material-ui/core/MenuItem';import FormHelperText from'@material-ui/core/FormHelperText';import FormControl from'@material-ui/core/FormControl';import{toast}from\"react-toastify\";// styling of input field\nvar CssTextField=withStyles({root:{'& label.Mui-focused':{color:'green'},'& .MuiInput-underline:after':{borderBottomColor:'green'},'& .MuiOutlinedInput-root':{'& fieldset':{borderColor:'#0f9ac4'},'&:hover fieldset':{borderColor:'#202d42'},'&.Mui-focused fieldset':{borderColor:'green'}}}})(TextField);var Courses=/*#__PURE__*/function(_Component){_inherits(Courses,_Component);var _super=_createSuper(Courses);function Courses(){var _this;_classCallCheck(this,Courses);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={courses:[{name:'',session:'',teacher:'',crHouurs:''}],//courses array in state to save the result and handling input fields\nwidth:0,height:0,marginLeftTextField:0,buttonDisabled:true//handling button disable or enable with boolean\n};_this.sumbitButtonConstraint=function(courses){var count=0;courses.map(function(course,i){if(!course.name||!course.session||!course.teacher||!course.crHouurs){count++;}});if(count){_this.setState({buttonDisabled:true});}else{_this.setState({buttonDisabled:false});}};_this.checkUniqueArray=function(courses){var singleArray=[];courses.map(function(course){singleArray.push(course.name);});var hasDuplicate=singleArray.some(function(val,i){return singleArray.indexOf(val)!==i;});if(hasDuplicate){_this.setState({buttonDisabled:true});toast.error('please enter unique name');}};_this.checkEmptyField=function(courses){var totalCounter=0;courses.map(function(course,i){var emptyCounter=0;for(var j=0;j<course.name.length;j++){if(course.name[j]===\" \"){emptyCounter++;}}if(course.name.length===emptyCounter){totalCounter++;}});if(totalCounter>0){_this.setState({buttonDisabled:true});}};_this.maxLengthConstraint=function(courses){courses.map(function(course,i){if(course.name.length>12){_this.setState({buttonDisabled:true});toast.error(\"Only 12 characters are allowed in course name\");}});};_this.handleChange=function(e,i,j){var crditHourArray=[[1,1,1],[1,2],[2,1],[3],[1,1],[2],[1]];//avaiable credit hourse options\nvar courses=_toConsumableArray(_this.state.courses);var name=e.target.name;//feild name from input feild\nvar value=e.target.value;//input value from input feild\nif(name===\"crHouurs\"){//if feild is creditHours then \nvalue=crditHourArray[value];}courses[i][name]=value;_this.setState({courses:courses});_this.sumbitButtonConstraint(courses);//checking that input feild should have value \n_this.checkUniqueArray(courses);//cheking uniquness of input feild (course name should unique)\n_this.checkEmptyField(courses);// checking white space in input field\n_this.maxLengthConstraint(courses);// checking maximum length in input field\n};_this.addMoreField=function(){var courses=[].concat(_toConsumableArray(_this.state.courses),[{name:'',session:'',teacher:'',crHouurs:''}]);_this.setState({courses:courses});_this.sumbitButtonConstraint(courses);//disabling the submit button because here input feild will not have value\n_this.checkEmptyField(courses);// checking white space in input field\n_this.maxLengthConstraint(courses);// checking maximum length in input field\n};_this.handleSubmit=function(){var courses=_toConsumableArray(_this.state.courses);//getting latest values from the state\n// if any value of input feild is empty, then removing it from courses array\ncourses.map(function(course,i){if(!course.name||!course.session||!course.teacher||!course.crHouurs){courses.splice(i,1);}});// sorting the course according to first index of credit hourse in descending order \nfor(var i=1;i<courses.length;++i){for(var j=0;j<courses.length-i;++j){if(courses[j].crHouurs[0]<courses[j+1].crHouurs[0]){var temp=courses[j];courses[j]=courses[j+1];courses[j+1]=temp;}}}_this.props.onCourses(courses);//calling function from parent component that is App and sending final result\n_this.props.history.push(\"/home/table\");//going to forward to next page by changing the url\n};_this.handleRemove=function(i){var courses=_toConsumableArray(_this.state.courses);if(courses.length>1){courses.splice(i,1);_this.setState({courses:courses});}else{toast.error('Add atleast one Course');}_this.sumbitButtonConstraint(courses);_this.checkEmptyField(courses);// checking white space in input field\n_this.maxLengthConstraint(courses);// checking maximum length in input field\n};_this.setMarginLeft=function(){if(window.innerWidth<=700){_this.setState({marginLeftTextField:20});}else{_this.setState({marginLeftTextField:0});}};_this.updateDimensions=function(i){_this.setState({width:window.innerWidth,height:window.innerHeight});if(i===1){_this.setMarginLeft();}};return _this;}_createClass(Courses,[{key:\"componentDidMount\",// will be called when component mount this is to handle some styling by the size of application\nvalue:function componentDidMount(){var _this2=this;window.addEventListener('resize',function(){return _this2.updateDimensions(1);});//adding event listner of resize to detech the size change of application\nthis.setMarginLeft();//calling function if size of application is changed\n}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this3=this;window.removeEventListener('resize',function(){return _this3.updateDimensions(0);});//removing listner\nthis.setMarginLeft();//calling function if size of application is changed\n}// ***** end_1 *****\n// interface of this component\n},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,courses=_this$state.courses,buttonDisabled=_this$state.buttonDisabled,marginLeftTextField=_this$state.marginLeftTextField;var _this$props=this.props,onTeachersName=_this$props.onTeachersName,onSessionsName=_this$props.onSessionsName;return/*#__PURE__*/React.createElement(\"form\",{noValidate:true},/*#__PURE__*/React.createElement(Grid,{container:true,row:true,alignItems:\"center\",item:true,xs:12,style:{marginTop:60}},courses.map(function(course,i){{/* to handle the credit Hourse in select during selection */}var crditValue='';if(course.crHouurs.length===3){crditValue=0;}else if(course.crHouurs[0]===1&&course.crHouurs[1]===2){crditValue=1;}else if(course.crHouurs[0]===2&&course.crHouurs[1]===1){crditValue=2;}else if(course.crHouurs[0]===3){crditValue=3;}else if(course.crHouurs[0]===1&&course.crHouurs[1]===1){crditValue=4;}else if(course.crHouurs[0]===2){crditValue=5;}else if(course.crHouurs[0]===1){crditValue=6;}return/*#__PURE__*/React.createElement(Grid,{container:true,key:i,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,xs:8,style:{marginTop:50,marginLeft:80}},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"flex-end\",alignItems:\"center\",item:true,sm:2,style:{marginLeft:marginLeftTextField*-14,marginRight:marginLeftTextField*-1}},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){return _this4.handleRemove(i);},style:{backgroundColor:\"#0f9ac4\"}},\"X\")),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,sm:3,style:{marginLeft:30,marginRight:-marginLeftTextField*4}},/*#__PURE__*/React.createElement(CssTextField,{label:\"Course-\".concat(i+1,\" Name\"),variant:\"outlined\",id:\"custom-css-outlined-input\",value:course.name,name:\"name\",onChange:function onChange(e){return _this4.handleChange(e,i);},size:\"small\"})),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,sm:2,style:{marginTop:marginLeftTextField}},/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(Select,{labelId:\"demo-simple-select-label\",id:\"demo-simple-select\",value:course.session,name:\"session\",onChange:function onChange(e){return _this4.handleChange(e,i);}},onSessionsName.map(function(session){return/*#__PURE__*/React.createElement(MenuItem,{value:session},session);})),/*#__PURE__*/React.createElement(FormHelperText,null,\"Select Class\"))),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,sm:2},/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(Select,{labelId:\"demo-simple-select-label\",id:\"demo-simple-select\",value:course.teacher,name:\"teacher\",onChange:function onChange(e){return _this4.handleChange(e,i);}},onTeachersName.map(function(teacher){return/*#__PURE__*/React.createElement(MenuItem,{value:teacher},teacher);})),/*#__PURE__*/React.createElement(FormHelperText,null,\"Select Teacher\"))),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,sm:2},/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(Select,{labelId:\"demo-simple-select-label\",id:\"demo-simple-select\",value:crditValue,name:\"crHouurs\",onChange:function onChange(e){return _this4.handleChange(e,i);}},/*#__PURE__*/React.createElement(MenuItem,{value:0},\"1, 1, 1\"),/*#__PURE__*/React.createElement(MenuItem,{value:1},\"1, 2\"),/*#__PURE__*/React.createElement(MenuItem,{value:2},\"2, 1\"),/*#__PURE__*/React.createElement(MenuItem,{value:3},\"3\"),\" \",/*#__PURE__*/React.createElement(MenuItem,{value:4},\"1, 1\"),/*#__PURE__*/React.createElement(MenuItem,{value:5},\"2\"),/*#__PURE__*/React.createElement(MenuItem,{value:6},\"1\")),/*#__PURE__*/React.createElement(FormHelperText,null,\"Select Credit Hourse\"))));}),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"flex-start\",alignItems:\"flex-start\",item:true,sm:2,style:{marginTop:40,marginLeft:marginLeftTextField*7}},/*#__PURE__*/React.createElement(Button,{style:{backgroundColor:\"#2a3547\",color:\"#d0d6e0\"},onClick:this.addMoreField,variant:\"contained\"},\"Add more\"))),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,xs:12,style:{marginTop:40}},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",style:{backgroundColor:buttonDisabled?\"#e0e0e0\":'#2a3547',color:buttonDisabled?\"#c0cad8\":\"#d0d6e0\"},endIcon:/*#__PURE__*/React.createElement(SendIcon,null,\"send\"),onClick:this.handleSubmit,disabled:buttonDisabled},\"Submit and Next\")));}}]);return Courses;}(Component);export default Courses;","map":{"version":3,"sources":["D:/timetableCLone/CS311S20PID25/timetable_frontend/src/timeTableInput/courses.jsx"],"names":["React","Component","withStyles","TextField","Button","Grid","SendIcon","Select","MenuItem","FormHelperText","FormControl","toast","CssTextField","root","color","borderBottomColor","borderColor","Courses","state","courses","name","session","teacher","crHouurs","width","height","marginLeftTextField","buttonDisabled","sumbitButtonConstraint","count","map","course","i","setState","checkUniqueArray","singleArray","push","hasDuplicate","some","val","indexOf","error","checkEmptyField","totalCounter","emptyCounter","j","length","maxLengthConstraint","handleChange","e","crditHourArray","target","value","addMoreField","handleSubmit","splice","temp","props","onCourses","history","handleRemove","setMarginLeft","window","innerWidth","updateDimensions","innerHeight","addEventListener","removeEventListener","onTeachersName","onSessionsName","marginTop","crditValue","marginLeft","marginRight","backgroundColor"],"mappings":"62BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,UAAR,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,OAAQC,KAAR,KAAoB,gBAApB,CAEA;AACA,GAAMC,CAAAA,YAAY,CAAGV,UAAU,CAAC,CAC9BW,IAAI,CAAE,CACJ,sBAAuB,CACrBC,KAAK,CAAE,OADc,CADnB,CAIJ,8BAA+B,CAC7BC,iBAAiB,CAAE,OADU,CAJ3B,CAOJ,2BAA4B,CAC1B,aAAc,CACZC,WAAW,CAAE,SADD,CADY,CAI1B,mBAAoB,CAClBA,WAAW,CAAE,SADK,CAJM,CAO1B,yBAA0B,CACxBA,WAAW,CAAE,OADW,CAPA,CAPxB,CADwB,CAAD,CAAV,CAoBlBb,SApBkB,CAArB,C,GAuBMc,CAAAA,O,+TAEFC,K,CAAQ,CACJC,OAAO,CAAE,CACL,CAACC,IAAI,CAAE,EAAP,CAAWC,OAAO,CAAE,EAApB,CAAwBC,OAAO,CAAE,EAAjC,CAAqCC,QAAQ,CAAE,EAA/C,CADK,CADL,CAGA;AACJC,KAAK,CAAE,CAJH,CAIMC,MAAM,CAAE,CAJd,CAKJC,mBAAmB,CAAE,CALjB,CAMJC,cAAc,CAAE,IAAQ;AANpB,C,OAURC,sB,CAAyB,SAACT,OAAD,CAAa,CAClC,GAAIU,CAAAA,KAAK,CAAG,CAAZ,CACAV,OAAO,CAACW,GAAR,CAAY,SAACC,MAAD,CAASC,CAAT,CAAe,CACvB,GAAG,CAACD,MAAM,CAACX,IAAR,EAAgB,CAACW,MAAM,CAACV,OAAxB,EAAmC,CAACU,MAAM,CAACT,OAA3C,EAAsD,CAACS,MAAM,CAACR,QAAjE,CAA0E,CACtEM,KAAK,GACR,CACJ,CAJD,EAMA,GAAGA,KAAH,CAAS,CACL,MAAKI,QAAL,CAAc,CAACN,cAAc,CAAE,IAAjB,CAAd,EACH,CAFD,IAEK,CACD,MAAKM,QAAL,CAAc,CAACN,cAAc,CAAE,KAAjB,CAAd,EACH,CACJ,C,OAGDO,gB,CAAmB,SAACf,OAAD,CAAa,CAC5B,GAAIgB,CAAAA,WAAW,CAAG,EAAlB,CAEAhB,OAAO,CAACW,GAAR,CAAY,SAAAC,MAAM,CAAI,CAClBI,WAAW,CAACC,IAAZ,CAAiBL,MAAM,CAACX,IAAxB,EACH,CAFD,EAIA,GAAIiB,CAAAA,YAAY,CAAGF,WAAW,CAACG,IAAZ,CAAiB,SAACC,GAAD,CAAMP,CAAN,QAAYG,CAAAA,WAAW,CAACK,OAAZ,CAAoBD,GAApB,IAA6BP,CAAzC,EAAjB,CAAnB,CACA,GAAGK,YAAH,CAAgB,CACZ,MAAKJ,QAAL,CAAc,CAACN,cAAc,CAAE,IAAjB,CAAd,EACAhB,KAAK,CAAC8B,KAAN,CAAY,0BAAZ,EACH,CACJ,C,OAIDC,e,CAAkB,SAACvB,OAAD,CAAa,CAC3B,GAAIwB,CAAAA,YAAY,CAAG,CAAnB,CACAxB,OAAO,CAACW,GAAR,CAAY,SAACC,MAAD,CAASC,CAAT,CAAe,CACvB,GAAIY,CAAAA,YAAY,CAAG,CAAnB,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGd,MAAM,CAACX,IAAP,CAAY0B,MAA/B,CAAuCD,CAAC,EAAxC,CAA2C,CACvC,GAAGd,MAAM,CAACX,IAAP,CAAYyB,CAAZ,IAAmB,GAAtB,CAA0B,CACtBD,YAAY,GACf,CACJ,CACD,GAAGb,MAAM,CAACX,IAAP,CAAY0B,MAAZ,GAAuBF,YAA1B,CAAuC,CACnCD,YAAY,GACf,CACJ,CAVD,EAYA,GAAGA,YAAY,CAAG,CAAlB,CAAoB,CAChB,MAAKV,QAAL,CAAc,CAACN,cAAc,CAAE,IAAjB,CAAd,EACH,CACJ,C,OAGDoB,mB,CAAsB,SAAC5B,OAAD,CAAa,CAC/BA,OAAO,CAACW,GAAR,CAAY,SAACC,MAAD,CAASC,CAAT,CAAe,CACvB,GAAGD,MAAM,CAACX,IAAP,CAAY0B,MAAZ,CAAqB,EAAxB,CAA2B,CACvB,MAAKb,QAAL,CAAc,CAACN,cAAc,CAAE,IAAjB,CAAd,EACAhB,KAAK,CAAC8B,KAAN,CAAY,+CAAZ,EACH,CACJ,CALD,EAMH,C,OAIDO,Y,CAAe,SAACC,CAAD,CAAIjB,CAAJ,CAAOa,CAAP,CAAa,CACxB,GAAMK,CAAAA,cAAc,CAAG,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAD,CAAY,CAAC,CAAD,CAAI,CAAJ,CAAZ,CAAoB,CAAC,CAAD,CAAI,CAAJ,CAApB,CAA4B,CAAC,CAAD,CAA5B,CAAiC,CAAC,CAAD,CAAI,CAAJ,CAAjC,CAAyC,CAAC,CAAD,CAAzC,CAA8C,CAAC,CAAD,CAA9C,CAAvB,CAA4E;AAE5E,GAAM/B,CAAAA,OAAO,oBAAO,MAAKD,KAAL,CAAWC,OAAlB,CAAb,CACA,GAAMC,CAAAA,IAAI,CAAG6B,CAAC,CAACE,MAAF,CAAS/B,IAAtB,CAA4B;AAE5B,GAAIgC,CAAAA,KAAK,CAAGH,CAAC,CAACE,MAAF,CAASC,KAArB,CAA4B;AAE5B,GAAGhC,IAAI,GAAK,UAAZ,CAAuB,CAAK;AACxBgC,KAAK,CAAGF,cAAc,CAACE,KAAD,CAAtB,CACH,CAEDjC,OAAO,CAACa,CAAD,CAAP,CAAWZ,IAAX,EAAmBgC,KAAnB,CACA,MAAKnB,QAAL,CAAc,CAACd,OAAO,CAAPA,OAAD,CAAd,EAEA,MAAKS,sBAAL,CAA4BT,OAA5B,EAAwC;AAExC,MAAKe,gBAAL,CAAsBf,OAAtB,EAAoC;AAEpC,MAAKuB,eAAL,CAAqBvB,OAArB,EAAyC;AAEzC,MAAK4B,mBAAL,CAAyB5B,OAAzB,EAA6C;AAGhD,C,OAGDkC,Y,CAAe,UAAM,CACjB,GAAMlC,CAAAA,OAAO,8BAAO,MAAKD,KAAL,CAAWC,OAAlB,GAA2B,CAACC,IAAI,CAAE,EAAP,CAAWC,OAAO,CAAE,EAApB,CAAwBC,OAAO,CAAE,EAAjC,CAAqCC,QAAQ,CAAE,EAA/C,CAA3B,EAAb,CACA,MAAKU,QAAL,CAAc,CAACd,OAAO,CAAPA,OAAD,CAAd,EAEA,MAAKS,sBAAL,CAA4BT,OAA5B,EAAwC;AAExC,MAAKuB,eAAL,CAAqBvB,OAArB,EAAyC;AAEzC,MAAK4B,mBAAL,CAAyB5B,OAAzB,EAA6C;AAEhD,C,OAGDmC,Y,CAAe,UAAM,CACjB,GAAMnC,CAAAA,OAAO,oBAAO,MAAKD,KAAL,CAAWC,OAAlB,CAAb,CAA6C;AAE7C;AACAA,OAAO,CAACW,GAAR,CAAY,SAACC,MAAD,CAASC,CAAT,CAAe,CACvB,GAAG,CAACD,MAAM,CAACX,IAAR,EAAgB,CAACW,MAAM,CAACV,OAAxB,EAAmC,CAACU,MAAM,CAACT,OAA3C,EAAsD,CAACS,MAAM,CAACR,QAAjE,CAA0E,CACtEJ,OAAO,CAACoC,MAAR,CAAevB,CAAf,CAAkB,CAAlB,EACH,CACJ,CAJD,EAMA;AACA,IAAI,GAAIA,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGb,OAAO,CAAC2B,MAA3B,CAAmC,EAAEd,CAArC,CAAuC,CACnC,IAAI,GAAIa,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAI1B,OAAO,CAAC2B,MAAR,CAAiBd,CAArC,CAAyC,EAAEa,CAA3C,EACI,GAAG1B,OAAO,CAAC0B,CAAD,CAAP,CAAWtB,QAAX,CAAoB,CAApB,EAAyBJ,OAAO,CAAC0B,CAAC,CAAC,CAAH,CAAP,CAAatB,QAAb,CAAsB,CAAtB,CAA5B,CAAqD,CAEjD,GAAIiC,CAAAA,IAAI,CAAGrC,OAAO,CAAC0B,CAAD,CAAlB,CACA1B,OAAO,CAAC0B,CAAD,CAAP,CAAa1B,OAAO,CAAC0B,CAAC,CAAC,CAAH,CAApB,CACA1B,OAAO,CAAC0B,CAAC,CAAC,CAAH,CAAP,CAAeW,IAAf,CACH,CANL,CAOH,CAED,MAAKC,KAAL,CAAWC,SAAX,CAAqBvC,OAArB,EAAgC;AAChC,MAAKsC,KAAL,CAAWE,OAAX,CAAmBvB,IAAnB,CAAwB,aAAxB,EAAwC;AAC3C,C,OAGDwB,Y,CAAe,SAAC5B,CAAD,CAAO,CAClB,GAAMb,CAAAA,OAAO,oBAAO,MAAKD,KAAL,CAAWC,OAAlB,CAAb,CACA,GAAGA,OAAO,CAAC2B,MAAR,CAAiB,CAApB,CAAsB,CAClB3B,OAAO,CAACoC,MAAR,CAAevB,CAAf,CAAkB,CAAlB,EACA,MAAKC,QAAL,CAAc,CAACd,OAAO,CAAPA,OAAD,CAAd,EACH,CAHD,IAGK,CACDR,KAAK,CAAC8B,KAAN,CAAY,wBAAZ,EACH,CAED,MAAKb,sBAAL,CAA4BT,OAA5B,EAEA,MAAKuB,eAAL,CAAqBvB,OAArB,EAAyC;AAEzC,MAAK4B,mBAAL,CAAyB5B,OAAzB,EAA6C;AAGhD,C,OAGD0C,a,CAAgB,UAAM,CAClB,GAAGC,MAAM,CAACC,UAAP,EAAqB,GAAxB,CAA4B,CACxB,MAAK9B,QAAL,CAAc,CAACP,mBAAmB,CAAE,EAAtB,CAAd,EACH,CAFD,IAEK,CACD,MAAKO,QAAL,CAAc,CAACP,mBAAmB,CAAE,CAAtB,CAAd,EACH,CACJ,C,OAEDsC,gB,CAAmB,SAAChC,CAAD,CAAO,CACtB,MAAKC,QAAL,CAAc,CAAET,KAAK,CAAEsC,MAAM,CAACC,UAAhB,CAA4BtC,MAAM,CAAEqC,MAAM,CAACG,WAA3C,CAAd,EACA,GAAGjC,CAAC,GAAK,CAAT,CAAW,CACP,MAAK6B,aAAL,GACH,CACJ,C,8DAED;kCACoB,iBAChBC,MAAM,CAACI,gBAAP,CAAwB,QAAxB,CAAkC,iBAAM,CAAA,MAAI,CAACF,gBAAL,CAAsB,CAAtB,CAAN,EAAlC,EAAoE;AACpE,KAAKH,aAAL,GAAyB;AAE5B,C,mEACsB,iBACnBC,MAAM,CAACK,mBAAP,CAA2B,QAA3B,CAAqC,iBAAM,CAAA,MAAI,CAACH,gBAAL,CAAsB,CAAtB,CAAN,EAArC,EAAyE;AACzE,KAAKH,aAAL,GAAyB;AAC5B,CAEyE;AAC1E;uCACQ,iCACmD,KAAK3C,KADxD,CACGC,OADH,aACGA,OADH,CACYQ,cADZ,aACYA,cADZ,CAC4BD,mBAD5B,aAC4BA,mBAD5B,iBAEqC,KAAK+B,KAF1C,CAEGW,cAFH,aAEGA,cAFH,CAEmBC,cAFnB,aAEmBA,cAFnB,CAGJ,mBACI,4BAAM,UAAU,KAAhB,eACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,GAAG,KAAnB,CAAoB,UAAU,CAAC,QAA/B,CAAwC,IAAI,KAA5C,CAA6C,EAAE,CAAE,EAAjD,CAAqD,KAAK,CAAE,CAACC,SAAS,CAAE,EAAZ,CAA5D,EAIQnD,OAAO,CAACW,GAAR,CAAY,SAACC,MAAD,CAASC,CAAT,CAAe,CAEtB,CAAC,4DAA6D,CAC/D,GAAIuC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAGxC,MAAM,CAACR,QAAP,CAAgBuB,MAAhB,GAA2B,CAA9B,CAAgC,CAC5ByB,UAAU,CAAG,CAAb,CACH,CAFD,IAEM,IAAGxC,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAAvB,EAA4BQ,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAAtD,CAAwD,CAC1DgD,UAAU,CAAG,CAAb,CACH,CAFK,IAEA,IAAGxC,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAAvB,EAA4BQ,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAAtD,CAAwD,CAC1DgD,UAAU,CAAG,CAAb,CACH,CAFK,IAEA,IAAGxC,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAA1B,CAA4B,CAC9BgD,UAAU,CAAG,CAAb,CACH,CAFK,IAEA,IAAGxC,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAAvB,EAA4BQ,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAAtD,CAAwD,CAC1DgD,UAAU,CAAG,CAAb,CACH,CAFK,IAEA,IAAGxC,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAA1B,CAA4B,CAC9BgD,UAAU,CAAG,CAAb,CACH,CAFK,IAEA,IAAGxC,MAAM,CAACR,QAAP,CAAgB,CAAhB,IAAuB,CAA1B,CAA4B,CAC9BgD,UAAU,CAAG,CAAb,CACH,CAGD,mBACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,GAAG,CAAIvC,CAAvB,CAA0B,SAAS,CAAC,KAApC,CAA0C,OAAO,CAAC,QAAlD,CAA2D,UAAU,CAAC,QAAtE,CAA+E,IAAI,KAAnF,CAAoF,EAAE,CAAE,CAAxF,CAA2F,KAAK,CAAE,CAACsC,SAAS,CAAE,EAAZ,CAAgBE,UAAU,CAAE,EAA5B,CAAlG,eACI,oBAAC,IAAD,EAAO,SAAS,KAAhB,CAAiB,SAAS,CAAC,KAA3B,CAAiC,OAAO,CAAC,UAAzC,CAAoD,UAAU,CAAC,QAA/D,CAAwE,IAAI,KAA5E,CAA6E,EAAE,CAAE,CAAjF,CAAoF,KAAK,CAAE,CAACA,UAAU,CAAE9C,mBAAmB,CAAG,CAAC,EAApC,CAAwC+C,WAAW,CAAE/C,mBAAmB,CAAG,CAAC,CAA5E,CAA3F,eAGI,oBAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAC,WAFV,CAGI,OAAO,CAAI,yBAAM,CAAA,MAAI,CAACkC,YAAL,CAAkB5B,CAAlB,CAAN,EAHf,CAII,KAAK,CAAE,CAAC0C,eAAe,CAAE,SAAlB,CAJX,MAHJ,CADJ,cAcI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,QAAxC,CAAiD,UAAU,CAAC,QAA5D,CAAqE,IAAI,KAAzE,CAA0E,EAAE,CAAE,CAA9E,CAAiF,KAAK,CAAE,CAACF,UAAU,CAAE,EAAb,CAAiBC,WAAW,CAAE,CAAC/C,mBAAD,CAAuB,CAArD,CAAxF,eAGI,oBAAC,YAAD,EACI,KAAK,kBAAcM,CAAC,CAAC,CAAhB,SADT,CAEI,OAAO,CAAG,UAFd,CAGI,EAAE,CAAG,2BAHT,CAII,KAAK,CAAID,MAAM,CAACX,IAJpB,CAKI,IAAI,CAAG,MALX,CAMI,QAAQ,CAAI,kBAAC6B,CAAD,QAAO,CAAA,MAAI,CAACD,YAAL,CAAkBC,CAAlB,CAAqBjB,CAArB,CAAP,EANhB,CAOI,IAAI,CAAC,OAPT,EAHJ,CAdJ,cA4BI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,QAAxC,CAAiD,UAAU,CAAC,QAA5D,CAAqE,IAAI,KAAzE,CAA0E,EAAE,CAAE,CAA9E,CAAiF,KAAK,CAAE,CAACsC,SAAS,CAAE5C,mBAAZ,CAAxF,eACI,oBAAC,WAAD,mBAEI,oBAAC,MAAD,EACI,OAAO,CAAC,0BADZ,CAEI,EAAE,CAAC,oBAFP,CAGI,KAAK,CAAEK,MAAM,CAACV,OAHlB,CAII,IAAI,CAAG,SAJX,CAKI,QAAQ,CAAE,kBAAC4B,CAAD,QAAO,CAAA,MAAI,CAACD,YAAL,CAAkBC,CAAlB,CAAqBjB,CAArB,CAAP,EALd,EAQQqC,cAAc,CAACvC,GAAf,CAAmB,SAAAT,OAAO,CAAI,CAC1B,mBAAQ,oBAAC,QAAD,EAAU,KAAK,CAAEA,OAAjB,EAA2BA,OAA3B,CAAR,CACH,CAFD,CARR,CAFJ,cAeI,oBAAC,cAAD,qBAfJ,CADJ,CA5BJ,cA+CI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,QAAxC,CAAiD,UAAU,CAAC,QAA5D,CAAqE,IAAI,KAAzE,CAA0E,EAAE,CAAE,CAA9E,eACI,oBAAC,WAAD,mBAEI,oBAAC,MAAD,EACI,OAAO,CAAC,0BADZ,CAEI,EAAE,CAAC,oBAFP,CAGI,KAAK,CAAEU,MAAM,CAACT,OAHlB,CAII,IAAI,CAAG,SAJX,CAKI,QAAQ,CAAE,kBAAC2B,CAAD,QAAO,CAAA,MAAI,CAACD,YAAL,CAAkBC,CAAlB,CAAqBjB,CAArB,CAAP,EALd,EAQQoC,cAAc,CAACtC,GAAf,CAAmB,SAAAR,OAAO,CAAI,CAC1B,mBAAQ,oBAAC,QAAD,EAAU,KAAK,CAAEA,OAAjB,EAA2BA,OAA3B,CAAR,CACH,CAFD,CARR,CAFJ,cAeI,oBAAC,cAAD,uBAfJ,CADJ,CA/CJ,cAkEI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,QAAxC,CAAiD,UAAU,CAAC,QAA5D,CAAqE,IAAI,KAAzE,CAA0E,EAAE,CAAE,CAA9E,eACI,oBAAC,WAAD,mBAKI,oBAAC,MAAD,EACI,OAAO,CAAC,0BADZ,CAEI,EAAE,CAAC,oBAFP,CAGI,KAAK,CAAEiD,UAHX,CAII,IAAI,CAAG,UAJX,CAKI,QAAQ,CAAE,kBAACtB,CAAD,QAAO,CAAA,MAAI,CAACD,YAAL,CAAkBC,CAAlB,CAAqBjB,CAArB,CAAP,EALd,eAOI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,YAPJ,cAQI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,SARJ,cASI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,SATJ,cAUI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,MAVJ,kBAYI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,SAZJ,cAaI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,MAbJ,cAcI,oBAAC,QAAD,EAAU,KAAK,CAAI,CAAnB,MAdJ,CALJ,cAqBI,oBAAC,cAAD,6BArBJ,CADJ,CAlEJ,CADJ,CA8FH,CAnHD,CAJR,cAyHS,oBAAC,IAAD,EAAM,SAAS,KAAf,CACG,SAAS,CAAC,KADb,CAEG,OAAO,CAAC,YAFX,CAGG,UAAU,CAAC,YAHd,CAIG,IAAI,KAJP,CAIQ,EAAE,CAAE,CAJZ,CAKG,KAAK,CAAE,CAACsC,SAAS,CAAE,EAAZ,CAAgBE,UAAU,CAAE9C,mBAAmB,CAAG,CAAlD,CALV,eAQD,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAACgD,eAAe,CAAE,SAAlB,CAA6B5D,KAAK,CAAE,SAApC,CAAf,CAA+D,OAAO,CAAE,KAAKuC,YAA7E,CAA2F,OAAO,CAAC,WAAnG,aARC,CAzHT,CADJ,cAuII,oBAAC,IAAD,EAAM,SAAS,KAAf,CACI,SAAS,CAAC,KADd,CAEI,OAAO,CAAC,QAFZ,CAGI,UAAU,CAAC,QAHf,CAII,IAAI,KAJR,CAIS,EAAE,CAAE,EAJb,CAKI,KAAK,CAAE,CAAEiB,SAAS,CAAE,EAAb,CALX,eAQI,oBAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAE,CAACI,eAAe,CAAE/C,cAAc,CAAG,SAAH,CAAa,SAA7C,CAAwDb,KAAK,CAAEa,cAAc,CAAG,SAAH,CAAe,SAA5F,CAFX,CAGI,OAAO,cAAE,oBAAC,QAAD,aAHb,CAII,OAAO,CAAI,KAAK2B,YAJpB,CAKI,QAAQ,CAAI3B,cALhB,oBARJ,CAvIJ,CADJ,CA4JH,C,qBA3ViB1B,S,EA8VtB,cAAegB,CAAAA,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {toast} from \"react-toastify\";\r\n\r\n// styling of input field\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#0f9ac4',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#202d42',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\nclass Courses extends Component {\r\n\r\n    state = {\r\n        courses: [\r\n            {name: '', session: '', teacher: '', crHouurs: ''}\r\n        ],  //courses array in state to save the result and handling input fields\r\n        width: 0, height: 0,\r\n        marginLeftTextField: 0,\r\n        buttonDisabled: true    //handling button disable or enable with boolean\r\n    }\r\n\r\n    // handling submit button: disable button if input feild do not have value\r\n    sumbitButtonConstraint = (courses) => {\r\n        let count = 0;\r\n        courses.map((course, i) => {\r\n            if(!course.name || !course.session || !course.teacher || !course.crHouurs){\r\n                count++;\r\n            }\r\n        })\r\n\r\n        if(count){\r\n            this.setState({buttonDisabled: true})\r\n        }else{\r\n            this.setState({buttonDisabled: false})\r\n        }\r\n    }\r\n\r\n    // checking that every input feild should have unique value mean course name should unique\r\n    checkUniqueArray = (courses) => {\r\n        let singleArray = [];\r\n\r\n        courses.map(course => {\r\n            singleArray.push(course.name);\r\n        })\r\n\r\n        let hasDuplicate = singleArray.some((val, i) => singleArray.indexOf(val) !== i);\r\n        if(hasDuplicate){\r\n            this.setState({buttonDisabled: true})\r\n            toast.error('please enter unique name')\r\n        }\r\n    }\r\n\r\n\r\n    // handling the input fields with white space\r\n    checkEmptyField = (courses) => {\r\n        let totalCounter = 0;\r\n        courses.map((course, i) => {\r\n            let emptyCounter = 0;\r\n            for(let j = 0; j < course.name.length; j++){\r\n                if(course.name[j] === \" \"){\r\n                    emptyCounter++;\r\n                }\r\n            }\r\n            if(course.name.length === emptyCounter){\r\n                totalCounter++;\r\n            }\r\n        })\r\n        \r\n        if(totalCounter > 0){           \r\n            this.setState({buttonDisabled: true})            \r\n        }\r\n    }\r\n\r\n    // handling the maximum length of input field\r\n    maxLengthConstraint = (courses) => {\r\n        courses.map((course, i) => {\r\n            if(course.name.length > 12){\r\n                this.setState({buttonDisabled: true}) \r\n                toast.error(\"Only 12 characters are allowed in course name\");    \r\n            }\r\n        })\r\n    }\r\n\r\n\r\n// handling change in input feild and update in courses acordingly to show in input feild\r\n    handleChange = (e, i, j) => {\r\n        const crditHourArray = [[1, 1, 1], [1, 2], [2, 1], [3], [1, 1], [2], [1]];  //avaiable credit hourse options\r\n\r\n        const courses = [...this.state.courses]\r\n        const name = e.target.name; //feild name from input feild\r\n\r\n        let value = e.target.value; //input value from input feild\r\n\r\n        if(name === \"crHouurs\"){    //if feild is creditHours then \r\n            value = crditHourArray[value];\r\n        }\r\n\r\n        courses[i][name] = value;\r\n        this.setState({courses})\r\n\r\n        this.sumbitButtonConstraint(courses);   //checking that input feild should have value \r\n\r\n        this.checkUniqueArray(courses);     //cheking uniquness of input feild (course name should unique)\r\n\r\n        this.checkEmptyField(courses);           // checking white space in input field\r\n\r\n        this.maxLengthConstraint(courses);           // checking maximum length in input field\r\n\r\n\r\n    }\r\n\r\n    // this function will add input feild if called\r\n    addMoreField = () => {\r\n        const courses = [...this.state.courses, {name: '', session: '', teacher: '', crHouurs: ''}];\r\n        this.setState({courses});\r\n\r\n        this.sumbitButtonConstraint(courses);   //disabling the submit button because here input feild will not have value\r\n        \r\n        this.checkEmptyField(courses);           // checking white space in input field\r\n\r\n        this.maxLengthConstraint(courses);           // checking maximum length in input field\r\n\r\n    }\r\n\r\n    // this function will be called when submit button will be clicked\r\n    handleSubmit = () => {\r\n        const courses = [...this.state.courses];     //getting latest values from the state\r\n        \r\n        // if any value of input feild is empty, then removing it from courses array\r\n        courses.map((course, i) => {\r\n            if(!course.name || !course.session || !course.teacher || !course.crHouurs){\r\n                courses.splice(i, 1);\r\n            }\r\n        })\r\n        \r\n        // sorting the course according to first index of credit hourse in descending order \r\n        for(let i = 1; i < courses.length; ++i){\r\n            for(let j = 0; j < (courses.length - i); ++j)\r\n                if(courses[j].crHouurs[0] < courses[j+1].crHouurs[0]){\r\n                    \r\n                    let temp = courses[j];\r\n                    courses[j] = courses[j+1];\r\n                    courses[j+1] = temp;\r\n                }\r\n        }\r\n\r\n        this.props.onCourses(courses);  //calling function from parent component that is App and sending final result\r\n        this.props.history.push(\"/home/table\"); //going to forward to next page by changing the url\r\n    }\r\n\r\n    // if input feild added by mistake with this function that can be removed by pressing the X button this function will be called\r\n    handleRemove = (i) => {\r\n        const courses = [...this.state.courses];\r\n        if(courses.length > 1){\r\n            courses.splice(i, 1);\r\n            this.setState({courses})\r\n        }else{\r\n            toast.error('Add atleast one Course')\r\n        }\r\n\r\n        this.sumbitButtonConstraint(courses);\r\n\r\n        this.checkEmptyField(courses);           // checking white space in input field\r\n\r\n        this.maxLengthConstraint(courses);           // checking maximum length in input field\r\n\r\n\r\n    }\r\n\r\n// handling some styling that can be affected by the resizing of application   ***** start_1 ***** \r\n    setMarginLeft = () => {\r\n        if(window.innerWidth <= 700){\r\n            this.setState({marginLeftTextField: 20})\r\n        }else{\r\n            this.setState({marginLeftTextField: 0})\r\n        }\r\n    }\r\n     // updaing dimension if size of application is chanegs\r\n    updateDimensions = (i) => {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n        if(i === 1){\r\n            this.setMarginLeft();\r\n        }\r\n    };\r\n    \r\n    // will be called when component mount this is to handle some styling by the size of application\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => this.updateDimensions(1));  //adding event listner of resize to detech the size change of application\r\n        this.setMarginLeft();    //calling function if size of application is changed\r\n        \r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', () => this.updateDimensions(0));    //removing listner\r\n        this.setMarginLeft();    //calling function if size of application is changed\r\n    }\r\n\r\n                                                                              // ***** end_1 *****\r\n    // interface of this component\r\n    render(){\r\n        const {courses, buttonDisabled, marginLeftTextField} = this.state;\r\n        const {onTeachersName, onSessionsName} = this.props;\r\n        return (\r\n            <form noValidate>\r\n                <Grid container row alignItems=\"center\" item xs={12} style={{marginTop: 60}}>\r\n                    \r\n                    {/* maping to courses array to render all input feilds in courses*/}\r\n                    {\r\n                        courses.map((course, i) => {\r\n\r\n                             {/* to handle the credit Hourse in select during selection */}\r\n                            let crditValue = '';\r\n                            if(course.crHouurs.length === 3){\r\n                                crditValue = 0;\r\n                            }else if(course.crHouurs[0] === 1 && course.crHouurs[1] === 2){\r\n                                crditValue = 1;\r\n                            }else if(course.crHouurs[0] === 2 && course.crHouurs[1] === 1){\r\n                                crditValue = 2;\r\n                            }else if(course.crHouurs[0] === 3){\r\n                                crditValue = 3;\r\n                            }else if(course.crHouurs[0] === 1 && course.crHouurs[1] === 1){\r\n                                crditValue = 4;\r\n                            }else if(course.crHouurs[0] === 2){\r\n                                crditValue = 5;\r\n                            }else if(course.crHouurs[0] === 1){\r\n                                crditValue = 6;\r\n                            }\r\n                                \r\n\r\n                            return (\r\n                                <Grid container key = {i} direction=\"row\" justify=\"center\" alignItems=\"center\" item xs={8} style={{marginTop: 50, marginLeft: 80}}>  \r\n                                    <Grid  container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" item sm={2} style={{marginLeft: marginLeftTextField * -14, marginRight: marginLeftTextField * -1}}>                                  \r\n                                        \r\n                                        {/* to remove the input feild by passing the index of feild */}\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick = {() => this.handleRemove(i)}\r\n                                            style={{backgroundColor: \"#0f9ac4\"}}\r\n                                        >\r\n                                            X\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" item sm={3} style={{marginLeft: 30, marginRight: -marginLeftTextField * 4}}>                                    \r\n                                        \r\n                                        {/* input feilds here calling the handleChange method to handle input value*/}\r\n                                        <CssTextField\r\n                                            label = {`Course-${i+1} Name`}\r\n                                            variant = \"outlined\"\r\n                                            id = \"custom-css-outlined-input\"\r\n                                            value = {course.name}\r\n                                            name = \"name\"\r\n                                            onChange = {(e) => this.handleChange(e, i)}\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" item sm={2} style={{marginTop: marginLeftTextField}} >\r\n                                        <FormControl>\r\n                                            {/* select class from already entered classes */}\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={course.session}\r\n                                                name = \"session\"\r\n                                                onChange={(e) => this.handleChange(e, i)}\r\n                                                >\r\n                                                {\r\n                                                    onSessionsName.map(session => {\r\n                                                        return (<MenuItem value={session}>{session}</MenuItem>);\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                            <FormHelperText>Select Class</FormHelperText>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" item sm={2} >\r\n                                        <FormControl>\r\n                                            {/* select teacher from already entered teachers */}\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={course.teacher}\r\n                                                name = \"teacher\"\r\n                                                onChange={(e) => this.handleChange(e, i)}\r\n                                                >\r\n                                                {\r\n                                                    onTeachersName.map(teacher => {\r\n                                                        return (<MenuItem value={teacher}>{teacher}</MenuItem>);\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                            <FormHelperText>Select Teacher</FormHelperText>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" item sm={2} >\r\n                                        <FormControl>\r\n                                            {/* select credit hour pattern from avaibale credit hourse \r\n                                                slect 1,1,1, if no consective lecture restriction and \r\n                                                select 3 if want to have consective three lectures\r\n                                            */}\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={crditValue}\r\n                                                name = \"crHouurs\"\r\n                                                onChange={(e) => this.handleChange(e, i)}\r\n                                                >\r\n                                                <MenuItem value = {0} >1, 1, 1</MenuItem>   \r\n                                                <MenuItem value = {1} >1, 2</MenuItem>\r\n                                                <MenuItem value = {2} >2, 1</MenuItem>\r\n                                                <MenuItem value = {3} >3</MenuItem> {/* mean consective three crdit hours */}\r\n\r\n                                                <MenuItem value = {4} >1, 1</MenuItem>\r\n                                                <MenuItem value = {5} >2</MenuItem>\r\n                                                <MenuItem value = {6} >1</MenuItem>\r\n                                            </Select>\r\n                                            <FormHelperText>Select Credit Hourse</FormHelperText>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                         <Grid container\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"flex-start\" \r\n                            item sm={2}\r\n                            style={{marginTop: 40, marginLeft: marginLeftTextField * 7}}\r\n                        >\r\n                        {/* butto to add more feilds by calling the addMoreFeild method */}\r\n                        <Button style={{backgroundColor: \"#2a3547\", color: \"#d0d6e0\"}} onClick={this.addMoreField} variant=\"contained\">\r\n                            Add more\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" \r\n                    item xs={12}\r\n                    style={{ marginTop: 40}}\r\n                >\r\n                    {/* submit button to submit current feilds and to go to next step */}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        style={{backgroundColor: buttonDisabled ? \"#e0e0e0\":'#2a3547', color: buttonDisabled ? \"#c0cad8\" : \"#d0d6e0\"}}\r\n                        endIcon={<SendIcon>send</SendIcon>}\r\n                        onClick = {this.handleSubmit}\r\n                        disabled = {buttonDisabled}\r\n                    >\r\n                    Submit and Next\r\n                    </Button>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Courses;"]},"metadata":{},"sourceType":"module"}