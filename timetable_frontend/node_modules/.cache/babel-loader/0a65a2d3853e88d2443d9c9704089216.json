{"ast":null,"code":"var _jsxFileName = \"D:\\\\act-back original\\\\timetable_frontend\\\\src\\\\timeTableOutput\\\\timeTable.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'hide'\n  },\n  table: {\n    minWidth: 340\n  },\n  tableCell: {\n    paddingRight: 4,\n    paddingLeft: 5\n  }\n});\n\nlet id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id,\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst data = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nfunction TimeTable(props) {\n  const {\n    classes\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    style: {\n      marginTop: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: 50\n    },\n    color: \"primary\",\n    onClick: this.generateTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Generate Table\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(TableCell, {\n    numeric: true,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(TableCell, {\n    numeric: true,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Fat (g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    numeric: true,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Carbs (g)\"), /*#__PURE__*/React.createElement(TableCell, {\n    numeric: true,\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Protein (g)\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, data.map(n => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: n.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: classes.TableCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, n.name), /*#__PURE__*/React.createElement(TableCell, {\n      numeric: true,\n      className: classes.tableCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, n.calories), /*#__PURE__*/React.createElement(TableCell, {\n      numeric: true,\n      className: classes.tableCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, n.fat), /*#__PURE__*/React.createElement(TableCell, {\n      numeric: true,\n      className: classes.tableCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, n.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      numeric: true,\n      className: classes.tableCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, n.protein));\n  })))));\n}\n\nTimeTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TimeTable);","map":{"version":3,"sources":["D:/act-back original/timetable_frontend/src/timeTableOutput/timeTable.jsx"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","styles","theme","root","display","marginTop","spacing","unit","overflowX","table","minWidth","tableCell","paddingRight","paddingLeft","id","createData","name","calories","fat","carbs","protein","data","TimeTable","props","classes","generateTable","map","n","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'hide',\r\n  },\r\n  table: {\r\n    minWidth: 340,\r\n  },\r\n  tableCell: {\r\n    paddingRight: 4,\r\n    paddingLeft: 5\r\n  }\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst data = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction TimeTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment style={{marginTop: 200}}>\r\n    <Button style={{marginTop: 50}} color=\"primary\" onClick={this.generateTable}>Generate Table</Button>\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.tableCell}>Dessert (100g serving)</TableCell>\r\n            <TableCell numeric className={classes.tableCell}>Calories</TableCell>\r\n            <TableCell numeric className={classes.tableCell}>Fat (g)</TableCell>\r\n            <TableCell numeric className={classes.tableCell}>Carbs (g)</TableCell>\r\n            <TableCell numeric className={classes.tableCell}>Protein (g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(n => {\r\n            return (\r\n              <TableRow key={n.id}>\r\n                <TableCell component=\"th\" scope=\"row\" className={classes.TableCell}>\r\n                  {n.name}\r\n                </TableCell>\r\n                <TableCell numeric className={classes.tableCell}>{n.calories}</TableCell>\r\n                <TableCell numeric className={classes.tableCell}>{n.fat}</TableCell>\r\n                <TableCell numeric className={classes.tableCell}>{n.carbs}</TableCell>\r\n                <TableCell numeric className={classes.tableCell}>{n.protein}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nTimeTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TimeTable);"]},"metadata":{},"sourceType":"module"}