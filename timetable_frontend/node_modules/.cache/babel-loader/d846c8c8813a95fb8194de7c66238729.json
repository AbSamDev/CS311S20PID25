{"ast":null,"code":"\"use strict\";\n\nvar util = require('./util'),\n    cssSupport = require('./cssSupport'),\n    backgroundValueParser = require('./backgroundValueParser'),\n    fontFaceSrcValueParser = require('css-font-face-src');\n\nvar updateCssPropertyValue = function (rule, property, value) {\n  rule.style.setProperty(property, value, rule.style.getPropertyPriority(property));\n};\n\nvar findBackgroundImageRules = function (cssRules) {\n  return cssRules.filter(function (rule) {\n    return rule.type === window.CSSRule.STYLE_RULE && (rule.style.getPropertyValue('background-image') || rule.style.getPropertyValue('background'));\n  });\n};\n\nvar findBackgroundDeclarations = function (rules) {\n  var backgroundDeclarations = [];\n  rules.forEach(function (rule) {\n    if (rule.style.getPropertyValue('background-image')) {\n      backgroundDeclarations.push({\n        property: 'background-image',\n        value: rule.style.getPropertyValue('background-image'),\n        rule: rule\n      });\n    } else if (rule.style.getPropertyValue('background')) {\n      backgroundDeclarations.push({\n        property: 'background',\n        value: rule.style.getPropertyValue('background'),\n        rule: rule\n      });\n    }\n  });\n  return backgroundDeclarations;\n};\n\nvar findFontFaceRules = function (cssRules) {\n  return cssRules.filter(function (rule) {\n    return rule.type === window.CSSRule.FONT_FACE_RULE && rule.style.getPropertyValue(\"src\");\n  });\n};\n\nvar findCSSImportRules = function (cssRules) {\n  return cssRules.filter(function (rule) {\n    return rule.type === window.CSSRule.IMPORT_RULE && rule.href;\n  });\n};\n\nvar findExternalBackgroundUrls = function (parsedBackground) {\n  var matchIndices = [];\n  parsedBackground.forEach(function (backgroundLayer, i) {\n    if (backgroundLayer.url && !util.isDataUri(backgroundLayer.url)) {\n      matchIndices.push(i);\n    }\n  });\n  return matchIndices;\n};\n\nvar findExternalFontFaceUrls = function (parsedFontFaceSources) {\n  var sourceIndices = [];\n  parsedFontFaceSources.forEach(function (sourceItem, i) {\n    if (sourceItem.url && !util.isDataUri(sourceItem.url)) {\n      sourceIndices.push(i);\n    }\n  });\n  return sourceIndices;\n};\n\nexports.adjustPathsOfCssResources = function (baseUrl, cssRules) {\n  var backgroundRules = findBackgroundImageRules(cssRules),\n      backgroundDeclarations = findBackgroundDeclarations(backgroundRules),\n      change = false;\n  backgroundDeclarations.forEach(function (declaration) {\n    var parsedBackground = backgroundValueParser.parse(declaration.value),\n        externalBackgroundIndices = findExternalBackgroundUrls(parsedBackground),\n        backgroundValue;\n\n    if (externalBackgroundIndices.length > 0) {\n      externalBackgroundIndices.forEach(function (backgroundLayerIndex) {\n        var relativeUrl = parsedBackground[backgroundLayerIndex].url,\n            url = util.joinUrl(baseUrl, relativeUrl);\n        parsedBackground[backgroundLayerIndex].url = url;\n      });\n      backgroundValue = backgroundValueParser.serialize(parsedBackground);\n      updateCssPropertyValue(declaration.rule, declaration.property, backgroundValue);\n      change = true;\n    }\n  });\n  findFontFaceRules(cssRules).forEach(function (rule) {\n    var fontFaceSrcDeclaration = rule.style.getPropertyValue(\"src\"),\n        parsedFontFaceSources,\n        externalFontFaceUrlIndices;\n\n    try {\n      parsedFontFaceSources = fontFaceSrcValueParser.parse(fontFaceSrcDeclaration);\n    } catch (e) {\n      return;\n    }\n\n    externalFontFaceUrlIndices = findExternalFontFaceUrls(parsedFontFaceSources);\n\n    if (externalFontFaceUrlIndices.length > 0) {\n      externalFontFaceUrlIndices.forEach(function (fontFaceUrlIndex) {\n        var relativeUrl = parsedFontFaceSources[fontFaceUrlIndex].url,\n            url = util.joinUrl(baseUrl, relativeUrl);\n        parsedFontFaceSources[fontFaceUrlIndex].url = url;\n      });\n      cssSupport.changeFontFaceRuleSrc(cssRules, rule, fontFaceSrcValueParser.serialize(parsedFontFaceSources));\n      change = true;\n    }\n  });\n  findCSSImportRules(cssRules).forEach(function (rule) {\n    var cssUrl = rule.href,\n        url = util.joinUrl(baseUrl, cssUrl);\n    cssSupport.exchangeRule(cssRules, rule, \"@import url(\" + url + \");\");\n    change = true;\n  });\n  return change;\n};\n/* CSS import inlining */\n\n\nvar substituteRule = function (cssRules, rule, newCssRules) {\n  var position = cssRules.indexOf(rule);\n  cssRules.splice(position, 1);\n  newCssRules.forEach(function (newRule, i) {\n    cssRules.splice(position + i, 0, newRule);\n  });\n};\n\nvar loadAndInlineCSSImport = function (cssRules, rule, alreadyLoadedCssUrls, options) {\n  var url = rule.href,\n      cssHrefRelativeToDoc;\n  url = cssSupport.unquoteString(url);\n  cssHrefRelativeToDoc = util.joinUrl(options.baseUrl, url);\n\n  if (alreadyLoadedCssUrls.indexOf(cssHrefRelativeToDoc) >= 0) {\n    // Remove URL by adding empty string\n    substituteRule(cssRules, rule, []);\n    return Promise.resolve([]);\n  } else {\n    alreadyLoadedCssUrls.push(cssHrefRelativeToDoc);\n  }\n\n  return util.ajax(url, options).then(function (cssText) {\n    var externalCssRules = cssSupport.rulesForCssText(cssText); // Recursively follow @import statements\n\n    return exports.loadCSSImportsForRules(externalCssRules, alreadyLoadedCssUrls, options).then(function (result) {\n      exports.adjustPathsOfCssResources(url, externalCssRules);\n      substituteRule(cssRules, rule, externalCssRules);\n      return result.errors;\n    });\n  }, function (e) {\n    throw {\n      resourceType: \"stylesheet\",\n      url: e.url,\n      msg: \"Unable to load stylesheet \" + e.url\n    };\n  });\n};\n\nexports.loadCSSImportsForRules = function (cssRules, alreadyLoadedCssUrls, options) {\n  var rulesToInline = findCSSImportRules(cssRules),\n      errors = [],\n      hasChanges = false;\n  return Promise.all(rulesToInline.map(function (rule) {\n    return loadAndInlineCSSImport(cssRules, rule, alreadyLoadedCssUrls, options).then(function (moreErrors) {\n      errors = errors.concat(moreErrors);\n      hasChanges = true;\n    }, function (e) {\n      errors.push(e);\n    });\n  })).then(function () {\n    return {\n      hasChanges: hasChanges,\n      errors: errors\n    };\n  });\n};\n/* CSS linked resource inlining */\n\n\nvar loadAndInlineBackgroundImages = function (backgroundValue, options) {\n  var parsedBackground = backgroundValueParser.parse(backgroundValue),\n      externalBackgroundLayerIndices = findExternalBackgroundUrls(parsedBackground),\n      hasChanges = false;\n  return util.collectAndReportErrors(externalBackgroundLayerIndices.map(function (backgroundLayerIndex) {\n    var url = parsedBackground[backgroundLayerIndex].url;\n    return util.getDataURIForImageURL(url, options).then(function (dataURI) {\n      parsedBackground[backgroundLayerIndex].url = dataURI;\n      hasChanges = true;\n    }, function (e) {\n      throw {\n        resourceType: \"backgroundImage\",\n        url: e.url,\n        msg: \"Unable to load background-image \" + e.url\n      };\n    });\n  })).then(function (errors) {\n    return {\n      backgroundValue: backgroundValueParser.serialize(parsedBackground),\n      hasChanges: hasChanges,\n      errors: errors\n    };\n  });\n};\n\nvar iterateOverRulesAndInlineBackgroundImages = function (cssRules, options) {\n  var rulesToInline = findBackgroundImageRules(cssRules),\n      backgroundDeclarations = findBackgroundDeclarations(rulesToInline),\n      errors = [],\n      cssHasChanges = false;\n  return Promise.all(backgroundDeclarations.map(function (declaration) {\n    return loadAndInlineBackgroundImages(declaration.value, options).then(function (result) {\n      if (result.hasChanges) {\n        updateCssPropertyValue(declaration.rule, declaration.property, result.backgroundValue);\n        cssHasChanges = true;\n      }\n\n      errors = errors.concat(result.errors);\n    });\n  })).then(function () {\n    return {\n      hasChanges: cssHasChanges,\n      errors: errors\n    };\n  });\n};\n\nvar loadAndInlineFontFace = function (srcDeclarationValue, options) {\n  var hasChanges = false,\n      parsedFontFaceSources,\n      externalFontFaceUrlIndices;\n\n  try {\n    parsedFontFaceSources = fontFaceSrcValueParser.parse(srcDeclarationValue);\n  } catch (e) {\n    parsedFontFaceSources = [];\n  }\n\n  externalFontFaceUrlIndices = findExternalFontFaceUrls(parsedFontFaceSources);\n  return util.collectAndReportErrors(externalFontFaceUrlIndices.map(function (urlIndex) {\n    var fontSrc = parsedFontFaceSources[urlIndex],\n        format = fontSrc.format || \"woff\";\n    return util.binaryAjax(fontSrc.url, options).then(function (content) {\n      var base64Content = btoa(content);\n      fontSrc.url = 'data:font/' + format + ';base64,' + base64Content;\n      hasChanges = true;\n    }, function (e) {\n      throw {\n        resourceType: \"fontFace\",\n        url: e.url,\n        msg: \"Unable to load font-face \" + e.url\n      };\n    });\n  })).then(function (errors) {\n    return {\n      srcDeclarationValue: fontFaceSrcValueParser.serialize(parsedFontFaceSources),\n      hasChanges: hasChanges,\n      errors: errors\n    };\n  });\n};\n\nvar iterateOverRulesAndInlineFontFace = function (cssRules, options) {\n  var rulesToInline = findFontFaceRules(cssRules),\n      errors = [],\n      hasChanges = false;\n  return Promise.all(rulesToInline.map(function (rule) {\n    var srcDeclarationValue = rule.style.getPropertyValue(\"src\");\n    return loadAndInlineFontFace(srcDeclarationValue, options).then(function (result) {\n      if (result.hasChanges) {\n        cssSupport.changeFontFaceRuleSrc(cssRules, rule, result.srcDeclarationValue);\n        hasChanges = true;\n      }\n\n      errors = errors.concat(result.errors);\n    });\n  })).then(function () {\n    return {\n      hasChanges: hasChanges,\n      errors: errors\n    };\n  });\n};\n\nexports.loadAndInlineCSSResourcesForRules = function (cssRules, options) {\n  var hasChanges = false,\n      errors = [];\n  return Promise.all([iterateOverRulesAndInlineBackgroundImages, iterateOverRulesAndInlineFontFace].map(function (func) {\n    return func(cssRules, options).then(function (result) {\n      hasChanges = hasChanges || result.hasChanges;\n      errors = errors.concat(result.errors);\n    });\n  })).then(function () {\n    return {\n      hasChanges: hasChanges,\n      errors: errors\n    };\n  });\n};","map":{"version":3,"sources":["D:/act-back original/timetable_frontend/node_modules/inlineresources/src/inlineCss.js"],"names":["util","require","cssSupport","backgroundValueParser","fontFaceSrcValueParser","updateCssPropertyValue","rule","property","value","style","setProperty","getPropertyPriority","findBackgroundImageRules","cssRules","filter","type","window","CSSRule","STYLE_RULE","getPropertyValue","findBackgroundDeclarations","rules","backgroundDeclarations","forEach","push","findFontFaceRules","FONT_FACE_RULE","findCSSImportRules","IMPORT_RULE","href","findExternalBackgroundUrls","parsedBackground","matchIndices","backgroundLayer","i","url","isDataUri","findExternalFontFaceUrls","parsedFontFaceSources","sourceIndices","sourceItem","exports","adjustPathsOfCssResources","baseUrl","backgroundRules","change","declaration","parse","externalBackgroundIndices","backgroundValue","length","backgroundLayerIndex","relativeUrl","joinUrl","serialize","fontFaceSrcDeclaration","externalFontFaceUrlIndices","e","fontFaceUrlIndex","changeFontFaceRuleSrc","cssUrl","exchangeRule","substituteRule","newCssRules","position","indexOf","splice","newRule","loadAndInlineCSSImport","alreadyLoadedCssUrls","options","cssHrefRelativeToDoc","unquoteString","Promise","resolve","ajax","then","cssText","externalCssRules","rulesForCssText","loadCSSImportsForRules","result","errors","resourceType","msg","rulesToInline","hasChanges","all","map","moreErrors","concat","loadAndInlineBackgroundImages","externalBackgroundLayerIndices","collectAndReportErrors","getDataURIForImageURL","dataURI","iterateOverRulesAndInlineBackgroundImages","cssHasChanges","loadAndInlineFontFace","srcDeclarationValue","urlIndex","fontSrc","format","binaryAjax","content","base64Content","btoa","iterateOverRulesAndInlineFontFace","loadAndInlineCSSResourcesForRules","func"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar util = require('./util'),\n    cssSupport = require('./cssSupport'),\n    backgroundValueParser = require('./backgroundValueParser'),\n    fontFaceSrcValueParser = require('css-font-face-src');\n\n\nvar updateCssPropertyValue = function (rule, property, value) {\n    rule.style.setProperty(property, value, rule.style.getPropertyPriority(property));\n};\n\nvar findBackgroundImageRules = function (cssRules) {\n    return cssRules.filter(function (rule) {\n        return rule.type === window.CSSRule.STYLE_RULE && (rule.style.getPropertyValue('background-image') || rule.style.getPropertyValue('background'));\n    });\n};\n\nvar findBackgroundDeclarations = function (rules) {\n    var backgroundDeclarations = [];\n\n    rules.forEach(function (rule) {\n        if (rule.style.getPropertyValue('background-image')) {\n            backgroundDeclarations.push({\n                property: 'background-image',\n                value: rule.style.getPropertyValue('background-image'),\n                rule: rule\n            });\n        } else if (rule.style.getPropertyValue('background')) {\n            backgroundDeclarations.push({\n                property: 'background',\n                value: rule.style.getPropertyValue('background'),\n                rule: rule\n            });\n        }\n    });\n\n    return backgroundDeclarations;\n};\n\nvar findFontFaceRules = function (cssRules) {\n    return cssRules.filter(function (rule) {\n        return rule.type === window.CSSRule.FONT_FACE_RULE && rule.style.getPropertyValue(\"src\");\n    });\n};\n\nvar findCSSImportRules = function (cssRules) {\n    return cssRules.filter(function (rule) {\n        return rule.type === window.CSSRule.IMPORT_RULE && rule.href;\n    });\n};\n\nvar findExternalBackgroundUrls = function (parsedBackground) {\n    var matchIndices = [];\n\n    parsedBackground.forEach(function (backgroundLayer, i) {\n        if (backgroundLayer.url && !util.isDataUri(backgroundLayer.url)) {\n            matchIndices.push(i);\n        }\n    });\n\n    return matchIndices;\n};\n\nvar findExternalFontFaceUrls = function (parsedFontFaceSources) {\n    var sourceIndices = [];\n    parsedFontFaceSources.forEach(function (sourceItem, i) {\n        if (sourceItem.url && !util.isDataUri(sourceItem.url)) {\n            sourceIndices.push(i);\n        }\n    });\n    return sourceIndices;\n};\n\nexports.adjustPathsOfCssResources = function (baseUrl, cssRules) {\n    var backgroundRules = findBackgroundImageRules(cssRules),\n        backgroundDeclarations = findBackgroundDeclarations(backgroundRules),\n        change = false;\n\n    backgroundDeclarations.forEach(function (declaration) {\n        var parsedBackground = backgroundValueParser.parse(declaration.value),\n            externalBackgroundIndices = findExternalBackgroundUrls(parsedBackground),\n            backgroundValue;\n\n        if (externalBackgroundIndices.length > 0) {\n            externalBackgroundIndices.forEach(function (backgroundLayerIndex) {\n                var relativeUrl = parsedBackground[backgroundLayerIndex].url,\n                    url = util.joinUrl(baseUrl, relativeUrl);\n                parsedBackground[backgroundLayerIndex].url = url;\n            });\n\n            backgroundValue = backgroundValueParser.serialize(parsedBackground);\n\n            updateCssPropertyValue(declaration.rule, declaration.property, backgroundValue);\n\n            change = true;\n        }\n    });\n    findFontFaceRules(cssRules).forEach(function (rule) {\n        var fontFaceSrcDeclaration = rule.style.getPropertyValue(\"src\"),\n            parsedFontFaceSources, externalFontFaceUrlIndices;\n\n        try {\n            parsedFontFaceSources = fontFaceSrcValueParser.parse(fontFaceSrcDeclaration);\n        } catch (e) {\n            return;\n        }\n        externalFontFaceUrlIndices = findExternalFontFaceUrls(parsedFontFaceSources);\n\n        if (externalFontFaceUrlIndices.length > 0) {\n            externalFontFaceUrlIndices.forEach(function (fontFaceUrlIndex) {\n                var relativeUrl = parsedFontFaceSources[fontFaceUrlIndex].url,\n                    url = util.joinUrl(baseUrl, relativeUrl);\n\n                parsedFontFaceSources[fontFaceUrlIndex].url = url;\n            });\n\n            cssSupport.changeFontFaceRuleSrc(cssRules, rule, fontFaceSrcValueParser.serialize(parsedFontFaceSources));\n\n            change = true;\n        }\n    });\n    findCSSImportRules(cssRules).forEach(function (rule) {\n        var cssUrl = rule.href,\n            url = util.joinUrl(baseUrl, cssUrl);\n\n        cssSupport.exchangeRule(cssRules, rule, \"@import url(\" + url + \");\");\n\n        change = true;\n    });\n\n    return change;\n};\n\n/* CSS import inlining */\n\nvar substituteRule = function (cssRules, rule, newCssRules) {\n    var position = cssRules.indexOf(rule);\n\n    cssRules.splice(position, 1);\n\n    newCssRules.forEach(function (newRule, i) {\n        cssRules.splice(position + i, 0, newRule);\n    });\n};\n\nvar loadAndInlineCSSImport = function (cssRules, rule, alreadyLoadedCssUrls, options) {\n    var url = rule.href,\n        cssHrefRelativeToDoc;\n\n    url = cssSupport.unquoteString(url);\n\n    cssHrefRelativeToDoc = util.joinUrl(options.baseUrl, url);\n\n    if (alreadyLoadedCssUrls.indexOf(cssHrefRelativeToDoc) >= 0) {\n        // Remove URL by adding empty string\n        substituteRule(cssRules, rule, []);\n        return Promise.resolve([]);\n    } else {\n        alreadyLoadedCssUrls.push(cssHrefRelativeToDoc);\n    }\n\n    return util.ajax(url, options)\n        .then(function (cssText) {\n            var externalCssRules = cssSupport.rulesForCssText(cssText);\n\n            // Recursively follow @import statements\n            return exports.loadCSSImportsForRules(externalCssRules, alreadyLoadedCssUrls, options)\n                .then(function (result) {\n                    exports.adjustPathsOfCssResources(url, externalCssRules);\n\n                    substituteRule(cssRules, rule, externalCssRules);\n\n                    return result.errors;\n                });\n        }, function (e) {\n            throw {\n                resourceType: \"stylesheet\",\n                url: e.url,\n                msg: \"Unable to load stylesheet \" + e.url\n            };\n        });\n};\n\nexports.loadCSSImportsForRules = function (cssRules, alreadyLoadedCssUrls, options) {\n    var rulesToInline = findCSSImportRules(cssRules),\n        errors = [],\n        hasChanges = false;\n\n    return Promise.all(rulesToInline.map(function (rule) {\n        return loadAndInlineCSSImport(cssRules, rule, alreadyLoadedCssUrls, options).then(function (moreErrors) {\n            errors = errors.concat(moreErrors);\n\n            hasChanges = true;\n        }, function (e) {\n            errors.push(e);\n        });\n    })).then(function () {\n        return {\n            hasChanges: hasChanges,\n            errors: errors\n        };\n    });\n};\n\n/* CSS linked resource inlining */\n\nvar loadAndInlineBackgroundImages = function (backgroundValue, options) {\n    var parsedBackground = backgroundValueParser.parse(backgroundValue),\n        externalBackgroundLayerIndices = findExternalBackgroundUrls(parsedBackground),\n        hasChanges = false;\n\n    return util.collectAndReportErrors(externalBackgroundLayerIndices.map(function (backgroundLayerIndex) {\n        var url = parsedBackground[backgroundLayerIndex].url;\n\n        return util.getDataURIForImageURL(url, options)\n            .then(function (dataURI) {\n                parsedBackground[backgroundLayerIndex].url = dataURI;\n\n                hasChanges = true;\n            }, function (e) {\n                throw {\n                    resourceType: \"backgroundImage\",\n                    url: e.url,\n                    msg: \"Unable to load background-image \" + e.url\n                };\n            });\n    })).then(function (errors) {\n        return {\n            backgroundValue: backgroundValueParser.serialize(parsedBackground),\n            hasChanges: hasChanges,\n            errors: errors\n        };\n    });\n};\n\nvar iterateOverRulesAndInlineBackgroundImages = function (cssRules, options) {\n    var rulesToInline = findBackgroundImageRules(cssRules),\n        backgroundDeclarations = findBackgroundDeclarations(rulesToInline),\n        errors = [],\n        cssHasChanges = false;\n\n    return Promise.all(backgroundDeclarations.map(function (declaration) {\n        return loadAndInlineBackgroundImages(declaration.value, options)\n            .then(function (result) {\n                if (result.hasChanges) {\n                    updateCssPropertyValue(declaration.rule, declaration.property, result.backgroundValue);\n\n                    cssHasChanges = true;\n                }\n\n                errors = errors.concat(result.errors);\n            });\n    })).then(function () {\n        return {\n            hasChanges: cssHasChanges,\n            errors: errors\n        };\n    });\n};\n\nvar loadAndInlineFontFace = function (srcDeclarationValue, options) {\n    var hasChanges = false,\n        parsedFontFaceSources, externalFontFaceUrlIndices;\n\n    try {\n        parsedFontFaceSources = fontFaceSrcValueParser.parse(srcDeclarationValue);\n    } catch (e) {\n        parsedFontFaceSources = [];\n    }\n    externalFontFaceUrlIndices = findExternalFontFaceUrls(parsedFontFaceSources);\n\n    return util.collectAndReportErrors(externalFontFaceUrlIndices.map(function (urlIndex) {\n        var fontSrc = parsedFontFaceSources[urlIndex],\n            format = fontSrc.format || \"woff\";\n\n        return util.binaryAjax(fontSrc.url, options)\n            .then(function (content) {\n                var base64Content = btoa(content);\n                fontSrc.url = 'data:font/' + format + ';base64,' + base64Content;\n\n                hasChanges = true;\n            }, function (e) {\n                throw {\n                    resourceType: \"fontFace\",\n                    url: e.url,\n                    msg: \"Unable to load font-face \" + e.url\n                };\n            });\n    })).then(function (errors) {\n        return {\n            srcDeclarationValue: fontFaceSrcValueParser.serialize(parsedFontFaceSources),\n            hasChanges: hasChanges,\n            errors: errors\n        };\n    });\n};\n\nvar iterateOverRulesAndInlineFontFace = function (cssRules, options) {\n    var rulesToInline = findFontFaceRules(cssRules),\n        errors = [],\n        hasChanges = false;\n\n    return Promise.all(rulesToInline.map(function (rule) {\n        var srcDeclarationValue = rule.style.getPropertyValue(\"src\");\n\n        return loadAndInlineFontFace(srcDeclarationValue, options).then(function (result) {\n            if (result.hasChanges) {\n                cssSupport.changeFontFaceRuleSrc(cssRules, rule, result.srcDeclarationValue);\n\n                hasChanges = true;\n            }\n\n            errors = errors.concat(result.errors);\n        });\n    })).then(function () {\n        return {\n            hasChanges: hasChanges,\n            errors: errors\n        };\n    });\n};\n\nexports.loadAndInlineCSSResourcesForRules = function (cssRules, options) {\n    var hasChanges = false,\n        errors = [];\n\n    return Promise.all([iterateOverRulesAndInlineBackgroundImages, iterateOverRulesAndInlineFontFace].map(function (func) {\n        return func(cssRules, options)\n            .then(function (result) {\n                hasChanges = hasChanges || result.hasChanges;\n                errors = errors.concat(result.errors);\n            });\n    })).then(function () {\n        return {\n            hasChanges: hasChanges,\n            errors: errors\n        };\n    });\n};\n"]},"metadata":{},"sourceType":"script"}