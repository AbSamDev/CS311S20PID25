{"ast":null,"code":"\"use strict\";\n\nvar url = require('url');\n\nexports.getDocumentBaseUrl = function (doc) {\n  if (doc.baseURI !== 'about:blank') {\n    return doc.baseURI;\n  }\n\n  return null;\n};\n\nexports.clone = function (object) {\n  var theClone = {},\n      i;\n\n  for (i in object) {\n    if (object.hasOwnProperty(i)) {\n      theClone[i] = object[i];\n    }\n  }\n\n  return theClone;\n};\n\nexports.cloneArray = function (nodeList) {\n  return Array.prototype.slice.apply(nodeList, [0]);\n};\n\nexports.joinUrl = function (baseUrl, relUrl) {\n  if (!baseUrl) {\n    return relUrl;\n  }\n\n  return url.resolve(baseUrl, relUrl);\n};\n\nexports.isDataUri = function (url) {\n  return /^data:/.test(url);\n};\n\nexports.collectAndReportErrors = function (promises) {\n  var errors = [];\n  return Promise.all(promises.map(function (promise) {\n    return promise.catch(function (e) {\n      errors.push(e);\n    });\n  })).then(function () {\n    return errors;\n  });\n};\n\nvar lastCacheDate = null;\n\nvar getUncachableURL = function (url, cache) {\n  if (cache === false || cache === 'none' || cache === 'repeated') {\n    if (lastCacheDate === null || cache !== 'repeated') {\n      lastCacheDate = Date.now();\n    }\n\n    return url + \"?_=\" + lastCacheDate;\n  } else {\n    return url;\n  }\n};\n\nexports.ajax = function (url, options) {\n  return new Promise(function (resolve, reject) {\n    var ajaxRequest = new window.XMLHttpRequest(),\n        joinedUrl = exports.joinUrl(options.baseUrl, url),\n        augmentedUrl;\n\n    var doReject = function () {\n      reject({\n        msg: 'Unable to load url',\n        url: joinedUrl\n      });\n    };\n\n    augmentedUrl = getUncachableURL(joinedUrl, options.cache);\n    ajaxRequest.addEventListener(\"load\", function () {\n      if (ajaxRequest.status === 200 || ajaxRequest.status === 0) {\n        resolve(ajaxRequest.response);\n      } else {\n        doReject();\n      }\n    }, false);\n    ajaxRequest.addEventListener(\"error\", doReject, false);\n\n    try {\n      ajaxRequest.open('GET', augmentedUrl, true);\n      ajaxRequest.overrideMimeType(options.mimeType);\n      ajaxRequest.send(null);\n    } catch (e) {\n      doReject();\n    }\n  });\n};\n\nexports.binaryAjax = function (url, options) {\n  var ajaxOptions = exports.clone(options);\n  ajaxOptions.mimeType = 'text/plain; charset=x-user-defined';\n  return exports.ajax(url, ajaxOptions).then(function (content) {\n    var binaryContent = \"\";\n\n    for (var i = 0; i < content.length; i++) {\n      binaryContent += String.fromCharCode(content.charCodeAt(i) & 0xFF);\n    }\n\n    return binaryContent;\n  });\n};\n\nvar detectMimeType = function (content) {\n  var startsWith = function (string, substring) {\n    return string.substring(0, substring.length) === substring;\n  };\n\n  if (startsWith(content, '<?xml') || startsWith(content, '<svg')) {\n    return 'image/svg+xml';\n  }\n\n  return 'image/png';\n};\n\nexports.getDataURIForImageURL = function (url, options) {\n  return exports.binaryAjax(url, options).then(function (content) {\n    var base64Content = btoa(content),\n        mimeType = detectMimeType(content);\n    return 'data:' + mimeType + ';base64,' + base64Content;\n  });\n};\n\nvar uniqueIdList = [];\n\nvar constantUniqueIdFor = function (element) {\n  // HACK, using a list results in O(n), but how do we hash a function?\n  if (uniqueIdList.indexOf(element) < 0) {\n    uniqueIdList.push(element);\n  }\n\n  return uniqueIdList.indexOf(element);\n};\n\nexports.memoize = function (func, hasher, memo) {\n  if (typeof memo !== \"object\") {\n    throw new Error(\"cacheBucket is not an object\");\n  }\n\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var argumentHash = hasher(args),\n        funcHash = constantUniqueIdFor(func),\n        retValue;\n\n    if (memo[funcHash] && memo[funcHash][argumentHash]) {\n      return memo[funcHash][argumentHash];\n    } else {\n      retValue = func.apply(null, args);\n      memo[funcHash] = memo[funcHash] || {};\n      memo[funcHash][argumentHash] = retValue;\n      return retValue;\n    }\n  };\n};","map":{"version":3,"sources":["D:/act-back original/timetable_frontend/node_modules/inlineresources/src/util.js"],"names":["url","require","exports","getDocumentBaseUrl","doc","baseURI","clone","object","theClone","i","hasOwnProperty","cloneArray","nodeList","Array","prototype","slice","apply","joinUrl","baseUrl","relUrl","resolve","isDataUri","test","collectAndReportErrors","promises","errors","Promise","all","map","promise","catch","e","push","then","lastCacheDate","getUncachableURL","cache","Date","now","ajax","options","reject","ajaxRequest","window","XMLHttpRequest","joinedUrl","augmentedUrl","doReject","msg","addEventListener","status","response","open","overrideMimeType","mimeType","send","binaryAjax","ajaxOptions","content","binaryContent","length","String","fromCharCode","charCodeAt","detectMimeType","startsWith","string","substring","getDataURIForImageURL","base64Content","btoa","uniqueIdList","constantUniqueIdFor","element","indexOf","memoize","func","hasher","memo","Error","args","call","arguments","argumentHash","funcHash","retValue"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar url = require('url');\n\n\nexports.getDocumentBaseUrl = function (doc) {\n    if (doc.baseURI !== 'about:blank') {\n        return doc.baseURI;\n    }\n\n    return null;\n};\n\nexports.clone = function (object) {\n    var theClone = {},\n        i;\n    for (i in object) {\n        if (object.hasOwnProperty(i)) {\n           theClone[i] = object[i];\n        }\n    }\n    return theClone;\n};\n\nexports.cloneArray = function (nodeList) {\n    return Array.prototype.slice.apply(nodeList, [0]);\n};\n\nexports.joinUrl = function (baseUrl, relUrl) {\n    if (!baseUrl) {\n        return relUrl;\n    }\n    return url.resolve(baseUrl, relUrl);\n};\n\nexports.isDataUri = function (url) {\n    return (/^data:/).test(url);\n};\n\nexports.collectAndReportErrors = function (promises) {\n    var errors = [];\n\n    return Promise.all(promises.map(function (promise) {\n        return promise.catch(function (e) {\n            errors.push(e);\n        });\n    })).then(function () {\n        return errors;\n    });\n};\n\nvar lastCacheDate = null;\n\nvar getUncachableURL = function (url, cache) {\n    if (cache === false || cache === 'none' || cache === 'repeated') {\n        if (lastCacheDate === null || cache !== 'repeated') {\n            lastCacheDate = Date.now();\n        }\n        return url + \"?_=\" + lastCacheDate;\n    } else {\n        return url;\n    }\n};\n\nexports.ajax = function (url, options) {\n    return new Promise(function (resolve, reject) {\n        var ajaxRequest = new window.XMLHttpRequest(),\n            joinedUrl = exports.joinUrl(options.baseUrl, url),\n            augmentedUrl;\n\n        var doReject = function () {\n            reject({\n                msg: 'Unable to load url',\n                url: joinedUrl\n            });\n        };\n\n        augmentedUrl = getUncachableURL(joinedUrl, options.cache);\n\n        ajaxRequest.addEventListener(\"load\", function () {\n            if (ajaxRequest.status === 200 || ajaxRequest.status === 0) {\n                resolve(ajaxRequest.response);\n            } else {\n                doReject();\n            }\n        }, false);\n\n        ajaxRequest.addEventListener(\"error\", doReject, false);\n\n        try {\n            ajaxRequest.open('GET', augmentedUrl, true);\n            ajaxRequest.overrideMimeType(options.mimeType);\n            ajaxRequest.send(null);\n        } catch (e) {\n            doReject();\n        }\n    });\n};\n\nexports.binaryAjax = function (url, options) {\n    var ajaxOptions = exports.clone(options);\n\n    ajaxOptions.mimeType = 'text/plain; charset=x-user-defined';\n\n    return exports.ajax(url, ajaxOptions)\n        .then(function (content) {\n            var binaryContent = \"\";\n\n            for (var i = 0; i < content.length; i++) {\n                binaryContent += String.fromCharCode(content.charCodeAt(i) & 0xFF);\n            }\n\n            return binaryContent;\n        });\n};\n\nvar detectMimeType = function (content) {\n    var startsWith = function (string, substring) {\n        return string.substring(0, substring.length) === substring;\n    };\n\n    if (startsWith(content, '<?xml') || startsWith(content, '<svg')) {\n        return 'image/svg+xml';\n    }\n    return 'image/png';\n};\n\nexports.getDataURIForImageURL = function (url, options) {\n    return exports.binaryAjax(url, options)\n        .then(function (content) {\n            var base64Content = btoa(content),\n                mimeType = detectMimeType(content);\n\n            return 'data:' + mimeType + ';base64,' + base64Content;\n        });\n};\n\nvar uniqueIdList = [];\n\nvar constantUniqueIdFor = function (element) {\n    // HACK, using a list results in O(n), but how do we hash a function?\n    if (uniqueIdList.indexOf(element) < 0) {\n        uniqueIdList.push(element);\n    }\n    return uniqueIdList.indexOf(element);\n};\n\nexports.memoize = function (func, hasher, memo) {\n    if (typeof memo !== \"object\") {\n        throw new Error(\"cacheBucket is not an object\");\n    }\n\n    return function () {\n        var args = Array.prototype.slice.call(arguments);\n\n        var argumentHash = hasher(args),\n            funcHash = constantUniqueIdFor(func),\n            retValue;\n\n        if (memo[funcHash] && memo[funcHash][argumentHash]) {\n            return memo[funcHash][argumentHash];\n        } else {\n            retValue = func.apply(null, args);\n\n            memo[funcHash] = memo[funcHash] || {};\n            memo[funcHash][argumentHash] = retValue;\n\n            return retValue;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"script"}