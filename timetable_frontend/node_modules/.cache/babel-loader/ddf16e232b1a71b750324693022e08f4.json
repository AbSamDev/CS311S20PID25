{"ast":null,"code":"import _toConsumableArray from\"D:\\\\act-back original\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\act-back original\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\act-back original\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\act-back original\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\act-back original\\\\timetable_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{withStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import Grid from'@material-ui/core/Grid';import SendIcon from'@material-ui/icons/Send';import{toast}from\"react-toastify\";// styling of input field\nvar CssTextField=withStyles({root:{'& label.Mui-focused':{color:'green'},'& .MuiInput-underline:after':{borderBottomColor:'green'},'& .MuiOutlinedInput-root':{'& fieldset':{borderColor:'#0f9ac4'},'&:hover fieldset':{borderColor:'#202d42'},'&.Mui-focused fieldset':{borderColor:'green'}}}})(TextField);var ClassRooms=/*#__PURE__*/function(_Component){_inherits(ClassRooms,_Component);var _super=_createSuper(ClassRooms);function ClassRooms(){var _this;_classCallCheck(this,ClassRooms);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={rooms:[{name:\"\"}],//room array in state to save the result and handling input field\nwidth:0,height:0,marginLeftTextField:0,buttonDisabled:true//handling button disable or enable with boolean\n};_this.sumbitButtonCOnstraint=function(rooms){var count=0;rooms.map(function(room,i){if(!room.name){count++;}});if(count){_this.setState({buttonDisabled:true});}else{_this.setState({buttonDisabled:false});}};_this.checkUniqueArray=function(rooms){var singleArray=[];rooms.map(function(room){singleArray.push(room.name);});var hasDuplicate=singleArray.some(function(val,i){return singleArray.indexOf(val)!==i;});if(hasDuplicate){_this.setState({buttonDisabled:true});toast.error(\"please enter unique name\");}};_this.handleChange=function(e,i){var rooms=_toConsumableArray(_this.state.rooms);rooms[i].name=e.target.value;_this.setState({rooms:rooms});_this.sumbitButtonCOnstraint(rooms);//checking that input feild should have value\n_this.checkUniqueArray(rooms);//cheking uniquness of input feild\n};_this.addMoreField=function(){var rooms=[].concat(_toConsumableArray(_this.state.rooms),[{name:\"\"}]);_this.setState({rooms:rooms});_this.sumbitButtonCOnstraint(rooms);//disabling the submit button because here input feild will not have value\n};_this.handleSubmit=function(){var roomsArray=[];var rooms=_toConsumableArray(_this.state.rooms);//getting latest values from the state\n// making rooms array of names that has been entered\nrooms.map(function(room){var roomArray=[room.name,[[\"Monday\",0,0,0,0,0,0,0,0],[\"Tuesday\",0,0,0,0,0,0,0,0],[\"Wednesday\",0,0,0,0,0,0,0,0],[\"Thursday\",0,0,0,0,0,0,0,0],[\"Friday\",0,0,0,0,0,0,0,0]]];roomsArray.push(roomArray);});// if input feild is empty mean room have no name, then removing it from rooms array\nrooms.map(function(room,i){if(!room.name){roomsArray.splice(i,1);}});_this.props.onClassRooms(roomsArray);//calling function from parent component that is App and sending final result\n_this.props.history.push(\"/home/classes\");//going to forward to next page by changing the url\n};_this.handleRemove=function(i){var rooms=_toConsumableArray(_this.state.rooms);if(rooms.length>1){rooms.splice(i,1);_this.setState({rooms:rooms});}else{toast.error(\"Enter the Name of Atleast one Room\");}_this.sumbitButtonCOnstraint(rooms);};_this.setMarginLeft=function(){if(window.innerWidth<=700){_this.setState({marginLeftTextField:20});}else{_this.setState({marginLeftTextField:0});}};_this.updateDimensions=function(i){_this.setState({width:window.innerWidth,height:window.innerHeight});if(i===1){_this.setMarginLeft();}};return _this;}_createClass(ClassRooms,[{key:\"componentDidMount\",// will be called when component mount this is to handle some styling by the size of application\nvalue:function componentDidMount(){var _this2=this;window.addEventListener('resize',function(){return _this2.updateDimensions(1);});//adding event listner of resize to detech the size change of application\nthis.setMarginLeft();//calling function if size of application is changed\n}//will be called when component will unmount\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this3=this;window.removeEventListener('resize',function(){return _this3.updateDimensions(0);});//removing listner\nthis.setMarginLeft();//calling function if size of application is changed\n}// ***** end_1 *****\n// interface of this component\n},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,rooms=_this$state.rooms,buttonDisabled=_this$state.buttonDisabled;//geting values from state by object distructring syntax\nreturn/*#__PURE__*/React.createElement(\"form\",{noValidate:true},/*#__PURE__*/React.createElement(Grid,{container:true,row:true,alignItems:\"center\",item:true,xs:12,style:{marginTop:60}},rooms.map(function(room,i){return/*#__PURE__*/React.createElement(Grid,{container:true,key:i,direction:\"column\",justify:\"center\",alignItems:\"center\",item:true,xs:8,style:{marginTop:20,marginLeft:_this4.state.marginLeftTextField*-2}},/*#__PURE__*/React.createElement(Grid,{only:\"lg\",container:true,direction:\"row\",justify:\"flex-end\",alignItems:\"center\",item:true,sm:7,style:{marginLeft:_this4.state.marginLeftTextField*8}},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:function onClick(){return _this4.handleRemove(i);},style:{backgroundColor:\"#0f9ac4\"}},\"X\")),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"flex-end\",alignItems:\"center\",item:true,sm:5,style:{marginTop:-40}},/*#__PURE__*/React.createElement(CssTextField,{label:\"Room-\".concat(i+1,\" Name\"),variant:\"outlined\",id:\"custom-css-outlined-input\",value:room.name,onChange:function onChange(e){return _this4.handleChange(e,i);},size:\"small\",fullWidth:true})));}),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"flex-start\",alignItems:\"flex-start\",item:true,sm:4,style:{marginTop:20,marginLeft:this.state.marginLeftTextField*2}},/*#__PURE__*/React.createElement(Button,{style:{backgroundColor:\"#2a3547\",color:\"#d0d6e0\"},onClick:this.addMoreField,variant:\"contained\"},\"Add more\"))),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",item:true,xs:12,style:{marginTop:40}},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",style:{backgroundColor:buttonDisabled?\"#e0e0e0\":'#2a3547',color:buttonDisabled?\"#c0cad8\":\"#d0d6e0\"},endIcon:/*#__PURE__*/React.createElement(SendIcon,null,\"send\"),onClick:this.handleSubmit,disabled:buttonDisabled},\"Submit and Next\")));}}]);return ClassRooms;}(Component);export default ClassRooms;","map":{"version":3,"sources":["D:/act-back original/timetable_frontend/src/timeTableInput/classrooms.jsx"],"names":["React","Component","withStyles","TextField","Button","Grid","SendIcon","toast","CssTextField","root","color","borderBottomColor","borderColor","ClassRooms","state","rooms","name","width","height","marginLeftTextField","buttonDisabled","sumbitButtonCOnstraint","count","map","room","i","setState","checkUniqueArray","singleArray","push","hasDuplicate","some","val","indexOf","error","handleChange","e","target","value","addMoreField","handleSubmit","roomsArray","roomArray","splice","props","onClassRooms","history","handleRemove","length","setMarginLeft","window","innerWidth","updateDimensions","innerHeight","addEventListener","removeEventListener","marginTop","marginLeft","backgroundColor"],"mappings":"izBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,UAAR,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAAQC,KAAR,KAAoB,gBAApB,CAEA;AACA,GAAMC,CAAAA,YAAY,CAAGN,UAAU,CAAC,CAC9BO,IAAI,CAAE,CACJ,sBAAuB,CACrBC,KAAK,CAAE,OADc,CADnB,CAIJ,8BAA+B,CAC7BC,iBAAiB,CAAE,OADU,CAJ3B,CAOJ,2BAA4B,CAC1B,aAAc,CACZC,WAAW,CAAE,SADD,CADY,CAI1B,mBAAoB,CAClBA,WAAW,CAAE,SADK,CAJM,CAO1B,yBAA0B,CACxBA,WAAW,CAAE,OADW,CAPA,CAPxB,CADwB,CAAD,CAAV,CAoBlBT,SApBkB,CAArB,C,GAuBMU,CAAAA,U,2UAEFC,K,CAAQ,CACJC,KAAK,CAAE,CAAC,CAACC,IAAI,CAAE,EAAP,CAAD,CADH,CACoB;AACxBC,KAAK,CAAE,CAFH,CAEMC,MAAM,CAAE,CAFd,CAGJC,mBAAmB,CAAE,CAHjB,CAIJC,cAAc,CAAE,IAAS;AAJrB,C,OAQRC,sB,CAAyB,SAACN,KAAD,CAAW,CAChC,GAAIO,CAAAA,KAAK,CAAG,CAAZ,CACAP,KAAK,CAACQ,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACnB,GAAG,CAACD,IAAI,CAACR,IAAT,CAAc,CACVM,KAAK,GACR,CACJ,CAJD,EAKA,GAAGA,KAAH,CAAS,CACL,MAAKI,QAAL,CAAc,CAACN,cAAc,CAAE,IAAjB,CAAd,EACH,CAFD,IAEK,CACD,MAAKM,QAAL,CAAc,CAACN,cAAc,CAAE,KAAjB,CAAd,EACH,CACJ,C,OAGDO,gB,CAAmB,SAACZ,KAAD,CAAW,CAC1B,GAAIa,CAAAA,WAAW,CAAG,EAAlB,CACAb,KAAK,CAACQ,GAAN,CAAU,SAAAC,IAAI,CAAI,CACdI,WAAW,CAACC,IAAZ,CAAiBL,IAAI,CAACR,IAAtB,EACH,CAFD,EAGA,GAAIc,CAAAA,YAAY,CAAGF,WAAW,CAACG,IAAZ,CAAiB,SAACC,GAAD,CAAMP,CAAN,QAAYG,CAAAA,WAAW,CAACK,OAAZ,CAAoBD,GAApB,IAA6BP,CAAzC,EAAjB,CAAnB,CACA,GAAGK,YAAH,CAAgB,CACZ,MAAKJ,QAAL,CAAc,CAACN,cAAc,CAAE,IAAjB,CAAd,EACAb,KAAK,CAAC2B,KAAN,CAAY,0BAAZ,EACH,CACJ,C,OAGDC,Y,CAAe,SAACC,CAAD,CAAIX,CAAJ,CAAU,CACrB,GAAMV,CAAAA,KAAK,oBAAO,MAAKD,KAAL,CAAWC,KAAlB,CAAX,CACAA,KAAK,CAACU,CAAD,CAAL,CAAST,IAAT,CAAgBoB,CAAC,CAACC,MAAF,CAASC,KAAzB,CACA,MAAKZ,QAAL,CAAc,CAACX,KAAK,CAALA,KAAD,CAAd,EAEA,MAAKM,sBAAL,CAA4BN,KAA5B,EAAqC;AAErC,MAAKY,gBAAL,CAAsBZ,KAAtB,EAAiC;AACpC,C,OAGDwB,Y,CAAe,UAAM,CACjB,GAAMxB,CAAAA,KAAK,8BAAO,MAAKD,KAAL,CAAWC,KAAlB,GAAyB,CAACC,IAAI,CAAE,EAAP,CAAzB,EAAX,CACA,MAAKU,QAAL,CAAc,CAACX,KAAK,CAALA,KAAD,CAAd,EAEA,MAAKM,sBAAL,CAA4BN,KAA5B,EAAoC;AACvC,C,OAGDyB,Y,CAAe,UAAM,CACjB,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAM1B,CAAAA,KAAK,oBAAO,MAAKD,KAAL,CAAWC,KAAlB,CAAX,CAAwC;AAEvC;AACDA,KAAK,CAACQ,GAAN,CAAU,SAAAC,IAAI,CAAI,CACd,GAAIkB,CAAAA,SAAS,CAAG,CAAClB,IAAI,CAACR,IAAN,CAAY,CACxB,CAAC,QAAD,CAAW,CAAX,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAA7B,CAAgC,CAAhC,CADwB,CAExB,CAAC,SAAD,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,CAAiC,CAAjC,CAFwB,CAGxB,CAAC,WAAD,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAA7B,CAAgC,CAAhC,CAAmC,CAAnC,CAHwB,CAIxB,CAAC,UAAD,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,CAAkC,CAAlC,CAJwB,CAKxB,CAAC,QAAD,CAAW,CAAX,CAAc,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAA7B,CAAgC,CAAhC,CALwB,CAAZ,CAAhB,CAOAyB,UAAU,CAACZ,IAAX,CAAgBa,SAAhB,EACH,CATD,EAWA;AACA3B,KAAK,CAACQ,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACnB,GAAG,CAACD,IAAI,CAACR,IAAT,CAAc,CACVyB,UAAU,CAACE,MAAX,CAAkBlB,CAAlB,CAAqB,CAArB,EACH,CACJ,CAJD,EAMA,MAAKmB,KAAL,CAAWC,YAAX,CAAwBJ,UAAxB,EAAwC;AACxC,MAAKG,KAAL,CAAWE,OAAX,CAAmBjB,IAAnB,CAAwB,eAAxB,EAA4C;AAC/C,C,OAGDkB,Y,CAAe,SAACtB,CAAD,CAAO,CAClB,GAAMV,CAAAA,KAAK,oBAAO,MAAKD,KAAL,CAAWC,KAAlB,CAAX,CAEA,GAAGA,KAAK,CAACiC,MAAN,CAAe,CAAlB,CAAoB,CAChBjC,KAAK,CAAC4B,MAAN,CAAalB,CAAb,CAAgB,CAAhB,EACA,MAAKC,QAAL,CAAc,CAACX,KAAK,CAALA,KAAD,CAAd,EACH,CAHD,IAGK,CACDR,KAAK,CAAC2B,KAAN,CAAY,oCAAZ,EACH,CAED,MAAKb,sBAAL,CAA4BN,KAA5B,EACH,C,OAIDkC,a,CAAgB,UAAM,CAClB,GAAGC,MAAM,CAACC,UAAP,EAAqB,GAAxB,CAA4B,CACxB,MAAKzB,QAAL,CAAc,CAACP,mBAAmB,CAAE,EAAtB,CAAd,EACH,CAFD,IAEK,CACD,MAAKO,QAAL,CAAc,CAACP,mBAAmB,CAAE,CAAtB,CAAd,EACH,CACJ,C,OAGDiC,gB,CAAmB,SAAC3B,CAAD,CAAO,CACtB,MAAKC,QAAL,CAAc,CAAET,KAAK,CAAEiC,MAAM,CAACC,UAAhB,CAA4BjC,MAAM,CAAEgC,MAAM,CAACG,WAA3C,CAAd,EACA,GAAG5B,CAAC,GAAK,CAAT,CAAW,CACP,MAAKwB,aAAL,GACH,CACJ,C,iEACD;kCACoB,iBAChBC,MAAM,CAACI,gBAAP,CAAwB,QAAxB,CAAkC,iBAAM,CAAA,MAAI,CAACF,gBAAL,CAAsB,CAAtB,CAAN,EAAlC,EAAoE;AACpE,KAAKH,aAAL,GAAwB;AAC3B,CACD;mEACuB,iBACnBC,MAAM,CAACK,mBAAP,CAA2B,QAA3B,CAAqC,iBAAM,CAAA,MAAI,CAACH,gBAAL,CAAsB,CAAtB,CAAN,EAArC,EAAwE;AACxE,KAAKH,aAAL,GAAwB;AAC3B,CAEwE;AAEzE;uCACQ,iCAC4B,KAAKnC,KADjC,CACGC,KADH,aACGA,KADH,CACUK,cADV,aACUA,cADV,CACwC;AAE5C,mBACI,4BAAM,UAAU,KAAhB,eACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,GAAG,KAAnB,CAAoB,UAAU,CAAC,QAA/B,CAAwC,IAAI,KAA5C,CAA6C,EAAE,CAAE,EAAjD,CAAqD,KAAK,CAAE,CAACoC,SAAS,CAAE,EAAZ,CAA5D,EAIQzC,KAAK,CAACQ,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACnB,mBACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,GAAG,CAAIA,CAAvB,CAA0B,SAAS,CAAC,QAApC,CAA6C,OAAO,CAAC,QAArD,CAA8D,UAAU,CAAC,QAAzE,CAAkF,IAAI,KAAtF,CAAuF,EAAE,CAAE,CAA3F,CAA8F,KAAK,CAAE,CAAC+B,SAAS,CAAE,EAAZ,CAAgBC,UAAU,CAAE,MAAI,CAAC3C,KAAL,CAAWK,mBAAX,CAAiC,CAAC,CAA9D,CAArG,eACI,oBAAC,IAAD,EAAM,IAAI,CAAC,IAAX,CAAgB,SAAS,KAAzB,CAA0B,SAAS,CAAC,KAApC,CAA0C,OAAO,CAAC,UAAlD,CAA6D,UAAU,CAAC,QAAxE,CAAiF,IAAI,KAArF,CAAsF,EAAE,CAAE,CAA1F,CAA6F,KAAK,CAAE,CAACsC,UAAU,CAAE,MAAI,CAAC3C,KAAL,CAAWK,mBAAX,CAAiC,CAA9C,CAApG,eAEI,oBAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAC,WAFV,CAGI,OAAO,CAAI,yBAAM,CAAA,MAAI,CAAC4B,YAAL,CAAkBtB,CAAlB,CAAN,EAHf,CAII,KAAK,CAAE,CAACiC,eAAe,CAAE,SAAlB,CAJX,MAFJ,CADJ,cAYI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,UAAxC,CAAmD,UAAU,CAAC,QAA9D,CAAuE,IAAI,KAA3E,CAA4E,EAAE,CAAE,CAAhF,CAAmF,KAAK,CAAE,CAACF,SAAS,CAAE,CAAC,EAAb,CAA1F,eAEI,oBAAC,YAAD,EACI,KAAK,gBAAY/B,CAAC,CAAC,CAAd,SADT,CAEI,OAAO,CAAG,UAFd,CAGI,EAAE,CAAG,2BAHT,CAII,KAAK,CAAID,IAAI,CAACR,IAJlB,CAKI,QAAQ,CAAI,kBAACoB,CAAD,QAAO,CAAA,MAAI,CAACD,YAAL,CAAkBC,CAAlB,CAAqBX,CAArB,CAAP,EALhB,CAMI,IAAI,CAAC,OANT,CAOI,SAAS,KAPb,EAFJ,CAZJ,CADJ,CA2BH,CA5BD,CAJR,cAkCS,oBAAC,IAAD,EAAM,SAAS,KAAf,CACG,SAAS,CAAC,KADb,CAEG,OAAO,CAAC,YAFX,CAGG,UAAU,CAAC,YAHd,CAIG,IAAI,KAJP,CAIQ,EAAE,CAAE,CAJZ,CAKG,KAAK,CAAE,CAAC+B,SAAS,CAAE,EAAZ,CAAgBC,UAAU,CAAE,KAAK3C,KAAL,CAAWK,mBAAX,CAAiC,CAA7D,CALV,eAQD,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAACuC,eAAe,CAAE,SAAlB,CAA6BhD,KAAK,CAAE,SAApC,CAAf,CAA+D,OAAO,CAAE,KAAK6B,YAA7E,CAA2F,OAAO,CAAC,WAAnG,aARC,CAlCT,CADJ,cAgDI,oBAAC,IAAD,EAAM,SAAS,KAAf,CACI,SAAS,CAAC,KADd,CAEI,OAAO,CAAC,QAFZ,CAGI,UAAU,CAAC,QAHf,CAII,IAAI,KAJR,CAIS,EAAE,CAAE,EAJb,CAKI,KAAK,CAAE,CAAEiB,SAAS,CAAE,EAAb,CALX,eAQI,oBAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAE,CAACE,eAAe,CAAEtC,cAAc,CAAG,SAAH,CAAa,SAA7C,CAAwDV,KAAK,CAAEU,cAAc,CAAG,SAAH,CAAe,SAA5F,CAFX,CAGI,OAAO,cAAE,oBAAC,QAAD,aAHb,CAII,OAAO,CAAI,KAAKoB,YAJpB,CAKI,QAAQ,CAAIpB,cALhB,oBARJ,CAhDJ,CADJ,CAqEH,C,wBAzMoBnB,S,EA4MzB,cAAeY,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {toast} from \"react-toastify\";\r\n\r\n// styling of input field\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#0f9ac4',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#202d42',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\nclass ClassRooms extends Component {\r\n\r\n    state = {\r\n        rooms: [{name: \"\"}],    //room array in state to save the result and handling input field\r\n        width: 0, height: 0,\r\n        marginLeftTextField: 0,\r\n        buttonDisabled: true     //handling button disable or enable with boolean\r\n    }\r\n\r\n    // handling submit button: disable button if input feild do not have value\r\n    sumbitButtonCOnstraint = (rooms) => {\r\n        let count = 0;\r\n        rooms.map((room, i) => {\r\n            if(!room.name){\r\n                count++;\r\n            }\r\n        })\r\n        if(count){\r\n            this.setState({buttonDisabled: true})\r\n        }else{\r\n            this.setState({buttonDisabled: false})\r\n        }\r\n    }\r\n\r\n    // checking that every input feild should have unique value\r\n    checkUniqueArray = (rooms) => {\r\n        let singleArray = [];\r\n        rooms.map(room => {\r\n            singleArray.push(room.name);\r\n        })\r\n        let hasDuplicate = singleArray.some((val, i) => singleArray.indexOf(val) !== i);\r\n        if(hasDuplicate){\r\n            this.setState({buttonDisabled: true})\r\n            toast.error(\"please enter unique name\");\r\n        }\r\n    }\r\n\r\n    // handling change in input feild and update in rooms acordingly to show in input feild\r\n    handleChange = (e, i) => {\r\n        const rooms = [...this.state.rooms];\r\n        rooms[i].name = e.target.value;\r\n        this.setState({rooms})\r\n\r\n        this.sumbitButtonCOnstraint(rooms)   //checking that input feild should have value\r\n\r\n        this.checkUniqueArray(rooms);    //cheking uniquness of input feild\r\n    }\r\n\r\n    // this function will add input feild if called\r\n    addMoreField = () => {\r\n        const rooms = [...this.state.rooms, {name: \"\"}]\r\n        this.setState({rooms})\r\n\r\n        this.sumbitButtonCOnstraint(rooms)  //disabling the submit button because here input feild will not have value\r\n    }\r\n\r\n    // this function will be called when submit button will be clicked\r\n    handleSubmit = () => {\r\n        const roomsArray = [];\r\n        const rooms = [...this.state.rooms];    //getting latest values from the state\r\n        \r\n         // making rooms array of names that has been entered\r\n        rooms.map(room => {\r\n            let roomArray = [room.name, [\r\n                [\"Monday\", 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [\"Tuesday\", 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [\"Wednesday\", 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [\"Thursday\", 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [\"Friday\", 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ]];\r\n            roomsArray.push(roomArray);\r\n        })\r\n\r\n        // if input feild is empty mean room have no name, then removing it from rooms array\r\n        rooms.map((room, i) => {\r\n            if(!room.name){\r\n                roomsArray.splice(i, 1);\r\n            }\r\n        })\r\n\r\n        this.props.onClassRooms(roomsArray);    //calling function from parent component that is App and sending final result\r\n        this.props.history.push(\"/home/classes\");   //going to forward to next page by changing the url\r\n    }\r\n\r\n    // if input feild added by mistake with this function that can be removed by pressing the X button this function will be called\r\n    handleRemove = (i) => {\r\n        const rooms = [...this.state.rooms];\r\n\r\n        if(rooms.length > 1){\r\n            rooms.splice(i, 1);\r\n            this.setState({rooms});\r\n        }else{\r\n            toast.error(\"Enter the Name of Atleast one Room\")\r\n        }\r\n\r\n        this.sumbitButtonCOnstraint(rooms)\r\n    }\r\n\r\n\r\n// handling some styling that can be affected by the resizing of application   ***** start_1 ***** \r\n    setMarginLeft = () => {\r\n        if(window.innerWidth <= 700){\r\n            this.setState({marginLeftTextField: 20})\r\n        }else{\r\n            this.setState({marginLeftTextField: 0})\r\n        }\r\n    }\r\n\r\n    // updaing dimension if size of application is chanegs\r\n    updateDimensions = (i) => {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n        if(i === 1){\r\n            this.setMarginLeft();\r\n        }\r\n    };\r\n    // will be called when component mount this is to handle some styling by the size of application\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => this.updateDimensions(1));  //adding event listner of resize to detech the size change of application\r\n        this.setMarginLeft();   //calling function if size of application is changed\r\n    }\r\n    //will be called when component will unmount\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', () => this.updateDimensions(0));   //removing listner\r\n        this.setMarginLeft();   //calling function if size of application is changed\r\n    }\r\n\r\n                                                                             // ***** end_1 *****\r\n    \r\n    // interface of this component\r\n    render(){\r\n        const {rooms, buttonDisabled} = this.state; //geting values from state by object distructring syntax\r\n\r\n        return (\r\n            <form noValidate >\r\n                <Grid container row alignItems=\"center\" item xs={12} style={{marginTop: 60}}>\r\n                    \r\n                    {/* maping to rooms array to render all input feilds in rooms*/}\r\n                    {\r\n                        rooms.map((room, i) => {\r\n                            return (\r\n                                <Grid container key = {i} direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={8} style={{marginTop: 20, marginLeft: this.state.marginLeftTextField * -2}}>  \r\n                                    <Grid only=\"lg\" container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" item sm={7} style={{marginLeft: this.state.marginLeftTextField * 8}} >                                  \r\n                                        {/* to remove the input feild by passing the index of feild */}\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick = {() => this.handleRemove(i)}\r\n                                            style={{backgroundColor: \"#0f9ac4\"}}\r\n                                        >\r\n                                            X\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" item sm={5} style={{marginTop: -40}}>                                    \r\n                                        {/* input feilds here calling the handleChange method to handle input value*/}\r\n                                        <CssTextField\r\n                                            label = {`Room-${i+1} Name`}\r\n                                            variant = \"outlined\"\r\n                                            id = \"custom-css-outlined-input\"\r\n                                            value = {room.name}\r\n                                            onChange = {(e) => this.handleChange(e, i)}\r\n                                            size=\"small\"\r\n                                            fullWidth\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n                         <Grid container\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"flex-start\" \r\n                            item sm={4}\r\n                            style={{marginTop: 20, marginLeft: this.state.marginLeftTextField * 2}}\r\n                        >\r\n                            {/* butto to add more feilds by calling the addMoreFeild method */}\r\n                        <Button style={{backgroundColor: \"#2a3547\", color: \"#d0d6e0\"}} onClick={this.addMoreField} variant=\"contained\">\r\n                            Add more\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" \r\n                    item xs={12}\r\n                    style={{ marginTop: 40}}\r\n                >\r\n                     {/* submit button to submit current feilds and to go to next step */}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        style={{backgroundColor: buttonDisabled ? \"#e0e0e0\":'#2a3547', color: buttonDisabled ? \"#c0cad8\" : \"#d0d6e0\"}}\r\n                        endIcon={<SendIcon>send</SendIcon>}\r\n                        onClick = {this.handleSubmit}\r\n                        disabled = {buttonDisabled}\r\n                    >\r\n                        Submit and Next\r\n                    </Button>\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassRooms;"]},"metadata":{},"sourceType":"module"}